{"version":3,"sources":["app/models/activity.ts","app/models/pagination.ts","app/models/profile.ts","app/api/agent.ts","app/stores/activityStore.ts","app/stores/profileStore.ts","app/stores/userStore.ts","app/stores/store.ts","app/stores/commonStore.ts","app/stores/modalStore.ts","app/stores/commentStore.ts","features/activities/dashboard/ActivitiesFilters.tsx","app/common/popover/Popover.tsx","features/profiles/FollowButton.tsx","features/profiles/ProfileCard.tsx","features/activities/dashboard/ActivitiesListItemAttendee.tsx","features/activities/dashboard/ActivitiesListItem.tsx","features/activities/dashboard/ActivityList.tsx","features/activities/dashboard/ActivityListItemPlaceholder.tsx","features/activities/dashboard/ActivityDashboard.tsx","features/activities/details/ActivityDetailedChat.tsx","features/activities/details/ActivityDetailedHeader.tsx","features/activities/details/ActivityDetailedInfo.tsx","features/activities/details/ActivityDetailedSidebar.tsx","app/layout/LoadingComponent.tsx","features/activities/details/ActivityDetails.tsx","app/common/form/DateInput.tsx","app/common/form/SelectInput.tsx","app/common/form/TextArea.tsx","app/common/form/TextInput.tsx","app/common/options/categoryOptions.ts","features/activities/form/ActivityForm.tsx","features/users/LoginForm.tsx","logo.svg","features/errors/ValidationErrors.tsx","features/users/RegisterForm.tsx","features/home/HomePage.tsx","app/common/modals/ModalContainer.tsx","app/layout/NavBar.tsx","features/errors/NotFound.tsx","app/layout/PrivateRoute.tsx","features/profiles/ProfileForm.tsx","features/profiles/ProfileAbout.tsx","features/profiles/ProfileActivitiesList.tsx","features/profiles/ProfileActivities.tsx","features/profiles/ProfileFollowings.tsx","app/common/imageUpload/PhotoWidgetCropper.tsx","app/common/imageUpload/PhotoWidgetDropzone.tsx","app/common/imageUpload/PhotoUploadWidget.tsx","features/profiles/ProfilePhotos.tsx","features/profiles/ProfileContent.tsx","features/profiles/ProfileHeader.tsx","features/profiles/ProfilePage.tsx","features/errors/ServerError.tsx","app/layout/App.tsx","reportWebVitals.ts","index.tsx"],"names":["Activity","initActivity","Object","assign","this","ActivityFormValues","activity","id","undefined","title","date","description","category","city","venue","PaginatedResult","data","pagination","PagingParams","pageNumber","pageSize","Profile","user","username","displayName","image","axios","defaults","baseURL","process","interceptors","request","use","config","token","store","commonStore","headers","Authorization","response","JSON","parse","error","status","toast","method","toLowerCase","errors","hasOwnProperty","history","push","modalStateErrors","key","flat","setServerError","Promise","reject","responseBody","requests","url","get","then","body","post","put","delete","agent","Activities","list","params","details","create","update","attend","Account","current","login","register","Profiles","uploadPhoto","file","formData","FormData","append","setMainPhoto","deletePhoto","updateProfile","profile","updateFollowing","listFollowings","predicate","listActivities","ActivityStore","activityRegistry","Map","selectedActivity","editMode","isLoading","isInitialLoading","isSubmitting","pagingParams","set","setPagingParams","setPredicate","value","resetPredicate","forEach","setActivity","Date","userStore","isGoing","attendees","some","x","isHost","hostUsername","host","find","loadActivities","a","setIsInitialLoading","axiosParams","result","runInAction","setPagination","console","log","loadActivity","getActivity","state","createActivity","attendee","newActivity","updateActivity","updatedActivity","deleteActivity","updateAttendance","filter","cancelActivityToggle","isCancelled","clearSelectedActivity","updateAttendeeFollowing","isFollowing","followersCount","followingCount","makeAutoObservable","reaction","keys","clear","URLSearchParams","toString","toISOString","Array","from","values","sort","b","getTime","entries","activitiesByDate","reduce","activities","format","ProfileStore","isLoadingProfile","isUploading","followings","activeTab","isLoadingActivities","setActiveTab","tab","loadProfile","photo","photos","isMain","setImage","activityStore","currentMainPhoto","p","newMainPhoto","setDisplayName","bio","following","loadFollowings","UserStore","creds","setToken","modalStore","closeModal","logout","getUser","name","Boolean","localStorage","getItem","appLoaded","setAppLoaded","setItem","removeItem","modal","open","header","openModal","content","profileStore","commentStore","comments","hubConnection","createHubConnection","activityId","HubConnectionBuilder","withUrl","accessTokenFactory","withAutomaticReconnect","configureLogging","LogLevel","Information","build","start","catch","on","comment","createdAt","unshift","stopHubConnection","stop","clearComments","addComment","invoke","StoreContext","createContext","useStore","useContext","observer","ListGroup","className","ListGroupItem","active","has","onClick","onChange","Popover","mainComponent","popoverComponent","useState","show","setShow","target","useRef","ref","onMouseEnter","onMouseLeave","Overlay","placement","arrowProps","popper","props","Button","variant","disabled","e","preventDefault","handleFollow","Card","style","maxWidth","Header","as","to","Body","Image","src","rounded","descr","length","substr","trim","trimDescr","height","Stack","direction","map","roundedCircle","ActivitiesListItem","setTarget","Alert","Title","Subtitle","Badge","bg","Text","type","event","currentTarget","Footer","groupedActivities","groupDate","gap","item","ActivityListItemPlaceholder","Placeholder","animation","xs","loadingNext","setLoadingNext","useEffect","size","Container","Row","Col","sm","pageStart","loadMore","currentPage","hasMore","totalPages","initialLoad","Spinner","role","onSubmit","resetForm","initialValues","validationSchema","Yup","required","isValid","handleSubmit","placeholder","field","onKeyPress","shiftKey","formatDistanceToNow","whiteSpace","Img","ImgOverlay","backgroundColor","ActivityDetailedInfo","alt","LoadingComponent","rest","useParams","DateInput","useField","meta","helpers","Form","Group","selected","setValue","touched","Control","Feedback","SelectInput","Label","label","onBlur","setTouched","isInvalid","options","o","text","TextArea","TextInput","categoryOptions","useHistory","nullable","enableReinitialize","uuid","handleFormSubmit","dirty","autoComplete","placeholderText","showTimeSelect","timeCaption","timeFormat","dateFormat","_g","_g2","_g3","_g4","_g5","_g6","_g7","_g8","_g9","_g10","_g11","_g12","_g13","_g14","_g15","_g16","email","password","setErrors","render","_extends","i","arguments","source","prototype","call","apply","_objectWithoutProperties","excluded","sourceKeys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","SvgLogo","_ref","svgRef","titleId","xmlns","xmlnsXlink","y","viewBox","enableBackground","xmlSpace","d","ForwardRef","ValidationErrors","err","index","fill","isLoggedIn","Modal","onHide","closeButton","Navbar","Nav","Brand","NavLink","exact","Link","NavDropdown","Item","NotFound","PrivateRoute","Component","component","onFinish","initialProfile","setEditMode","isCurrentUser","setKey","Tabs","activeKey","onSelect","k","Tab","eventKey","PhotoWidgetCropper","imagePreview","setCropper","onInitialized","cropper","initialAspectRatio","aspectRatio","width","preview","guides","viewMode","autoCropArea","background","PhotoWidgetDropzone","setFiles","dzStyles","border","borderColor","borderRadius","paddingTop","textAlign","onDrop","useCallback","acceptedFiles","URL","createObjectURL","useDropzone","getRootProps","getInputProps","isDragActive","PhotoUploadWidget","loading","files","revokeObjectURL","minHeight","overflow","ButtonGroup","getCroppedCanvas","toBlob","blob","addPhotoMode","setAddPhotoMode","handleSetMainPhoto","handleDeletePhoto","defaultActiveKey","Content","Pane","message","location","useLocation","finally","position","hideProgressBar","path","HomePage","ActivityDashboard","ActivityDetails","ActivityForm","ProfilePage","ServerError","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","createBrowserHistory","ReactDOM","StrictMode","Provider","document","getElementById"],"mappings":"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","file":"static/js/main.5c8c5535.chunk.js","sourcesContent":["import { Profile } from \"./profile\";\r\n\r\nexport interface Activity {\r\n  id: string;\r\n  title: string;\r\n  date: Date | null;\r\n  description: string;\r\n  category: string;\r\n  city: string;\r\n  venue: string;\r\n\r\n  isGoing: boolean;\r\n  isHost: boolean;\r\n  host?: Profile;\r\n  hostUsername: string;\r\n  isCancelled: boolean;\r\n  attendees: Profile[];\r\n}\r\n\r\nexport class Activity implements Activity {\r\n  constructor(initActivity?: ActivityFormValues) {\r\n    Object.assign(this, initActivity);\r\n  }\r\n}\r\n\r\nexport class ActivityFormValues {\r\n  id?: string = undefined;\r\n  title: string = \"\";\r\n  date: Date | null = null;\r\n  description: string = \"\";\r\n  category: string = \"\";\r\n  city: string = \"\";\r\n  venue: string = \"\";\r\n\r\n  constructor(activity?: ActivityFormValues) {\r\n    if (activity) {\r\n      this.id = activity.id;\r\n      this.title = activity.title;\r\n      this.date = activity.date;\r\n      this.description = activity.description;\r\n      this.category = activity.category;\r\n      this.city = activity.city;\r\n      this.venue = activity.venue;\r\n    }\r\n  }\r\n}\r\n","export interface Pagination {\r\n  currentPage: number;\r\n  itemPerPage: number;\r\n  totalItems: number;\r\n  totalPages: number;\r\n}\r\n\r\nexport class PaginatedResult<T> {\r\n  data: T;\r\n  pagination: Pagination;\r\n\r\n  constructor(data: T, pagination: Pagination) {\r\n    this.data = data;\r\n    this.pagination = pagination;\r\n  }\r\n}\r\n\r\nexport class PagingParams {\r\n  pageNumber;\r\n  pageSize;\r\n\r\n  constructor(pageNumber = 1, pageSize = 2) {\r\n    this.pageNumber = pageNumber;\r\n    this.pageSize = pageSize;\r\n  }\r\n}\r\n","import { User } from \"./user\";\r\n\r\nexport interface Profile {\r\n  username: string;\r\n  displayName: string;\r\n  image?: string;\r\n  bio?: string;\r\n  followersCount: number;\r\n  followingCount: number;\r\n  isFollowing: boolean;\r\n  photos?: Photo[];\r\n}\r\n\r\nexport class Profile implements Profile {\r\n  constructor(user: User) {\r\n    this.username = user.username;\r\n    this.displayName = user.displayName;\r\n    this.image = user.image;\r\n  }\r\n}\r\n\r\nexport interface Photo {\r\n  id: string;\r\n  url: string;\r\n  isMain: boolean;\r\n}\r\n\r\nexport interface UserActivity {\r\n  id: string;\r\n  title: string;\r\n  category: string;\r\n  date: Date;\r\n}\r\n","import { Activity, ActivityFormValues } from \"./../models/activity\";\r\nimport { Photo, Profile, UserActivity } from \"../models/profile\";\r\nimport { User, UserFormValues } from \"../models/user\";\r\nimport axios, { AxiosError, AxiosResponse } from \"axios\";\r\n\r\nimport { PaginatedResult } from \"../models/pagination\";\r\nimport { history } from \"../..\";\r\nimport { store } from \"../stores/store\";\r\nimport { toast } from \"react-toastify\";\r\n\r\naxios.defaults.baseURL = process.env.REACT_APP_API_URL;\r\n\r\n// const sleep = (delay: number) => {\r\n//   return new Promise((resolve) => {\r\n//     setTimeout(resolve, delay);\r\n//   });\r\n// };\r\n\r\naxios.interceptors.request.use((config) => {\r\n  const token = store.commonStore.token;\r\n  if (token) config.headers.Authorization = `Bearer ${token}`;\r\n  return config;\r\n});\r\n\r\naxios.interceptors.response.use(\r\n  (response) => {\r\n    // await sleep(1000);\r\n    const pagination = response.headers[\"pagination\"];\r\n    if (pagination) {\r\n      response.data = new PaginatedResult(\r\n        response.data,\r\n        JSON.parse(pagination)\r\n      );\r\n      return response as AxiosResponse<PaginatedResult<any>>;\r\n    }\r\n    return response;\r\n  },\r\n  (error: AxiosError) => {\r\n    const { data, status, config } = error.response!;\r\n    switch (status) {\r\n      case 400:\r\n        //bad request\r\n        if (typeof data === \"string\") {\r\n          toast.error(data);\r\n        }\r\n        //not a guid case\r\n        if (\r\n          config.method?.toLowerCase() === \"get\" &&\r\n          data.errors.hasOwnProperty(\"id\")\r\n        ) {\r\n          history.push(\"/not-found\");\r\n        }\r\n        //validation error case\r\n        if (data.errors) {\r\n          const modalStateErrors = [];\r\n          for (const key in data.errors) {\r\n            if (data.errors[key]) {\r\n              modalStateErrors.push(data.errors[key]);\r\n            }\r\n          }\r\n          throw modalStateErrors.flat();\r\n        }\r\n        break;\r\n      case 401:\r\n        toast.error(\"Unauthorized\");\r\n        break;\r\n      case 404:\r\n        history.push(\"/not-found\");\r\n        break;\r\n      case 500:\r\n        store.commonStore.setServerError(data);\r\n        history.push(\"/server-error\");\r\n        break;\r\n      default:\r\n        toast.error(\"Default error\");\r\n        break;\r\n    }\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nconst responseBody = <T>(response: AxiosResponse<T>) => response.data;\r\n\r\nconst requests = {\r\n  get: <T>(url: string) => axios.get<T>(url).then(responseBody),\r\n  post: <T>(url: string, body: {}) =>\r\n    axios.post<T>(url, body).then(responseBody),\r\n  put: <T>(url: string, body: {}) => axios.put<T>(url, body).then(responseBody),\r\n  del: <T>(url: string) => axios.delete<T>(url).then(responseBody),\r\n};\r\n\r\nconst Activities = {\r\n  list: (params: URLSearchParams) =>\r\n    axios\r\n      .get<PaginatedResult<Activity[]>>(\"/activities\", { params })\r\n      .then(responseBody),\r\n  details: (id: string) => requests.get<Activity>(`/activities/${id}`),\r\n  create: (activity: ActivityFormValues) =>\r\n    requests.post<void>(\"/activities\", activity),\r\n  update: (activity: ActivityFormValues) =>\r\n    requests.put<void>(`/activities/${activity.id}`, activity),\r\n  delete: (id: string) => requests.del<void>(`/activities/${id}`),\r\n  attend: (id: string) => requests.post<void>(`/activities/${id}/attend`, {}),\r\n};\r\n\r\nconst Account = {\r\n  current: () => requests.get<User>(\"/account\"),\r\n  login: (user: UserFormValues) => requests.post<User>(\"/account/login\", user),\r\n  register: (user: UserFormValues) =>\r\n    requests.post<User>(\"account/register\", user),\r\n};\r\n\r\nconst Profiles = {\r\n  get: (username: string) => requests.get<Profile>(`/profiles/${username}`),\r\n  uploadPhoto: (file: Blob) => {\r\n    const formData = new FormData();\r\n    formData.append(\"File\", file);\r\n    return axios.post<Photo>(\"/photos\", formData, {\r\n      headers: { \"Content-type\": \"multipart/form-data\" },\r\n    });\r\n  },\r\n  setMainPhoto: (id: string) => requests.post(`/photos/${id}/setMain`, {}),\r\n  deletePhoto: (id: string) => requests.del(`/photos/${id}`),\r\n  updateProfile: (profile: Partial<Profile>) =>\r\n    requests.put<void>(\"/profiles\", profile),\r\n  updateFollowing: (username: string) =>\r\n    requests.post(`/follow/${username}`, {}),\r\n  listFollowings: (username: string, predicate: string) =>\r\n    requests.get<Profile[]>(`/follow/${username}?predicate=${predicate}`),\r\n  listActivities: (username: string, predicate: string) =>\r\n    requests.get<UserActivity[]>(\r\n      `/profiles/${username}/activities?predicate=${predicate}`\r\n    ),\r\n};\r\n\r\nconst agent = { Activities, Account, Profiles };\r\n\r\nexport default agent;\r\n","import { Activity, ActivityFormValues } from \"./../models/activity\";\r\nimport { Pagination, PagingParams } from \"./../models/pagination\";\r\nimport { makeAutoObservable, reaction, runInAction } from \"mobx\";\r\n\r\nimport { Profile } from \"./../models/profile\";\r\nimport agent from \"../api/agent\";\r\nimport { format } from \"date-fns\";\r\nimport { store } from \"./store\";\r\n\r\nexport default class ActivityStore {\r\n  activityRegistry = new Map<string, Activity>();\r\n  selectedActivity: Activity | undefined = undefined;\r\n  editMode = false;\r\n  isLoading = false;\r\n  isInitialLoading = true;\r\n  isSubmitting = false;\r\n  pagination: Pagination | null = null;\r\n  pagingParams = new PagingParams();\r\n  predicate = new Map().set(\"all\", true);\r\n\r\n  constructor() {\r\n    makeAutoObservable(this);\r\n\r\n    reaction(\r\n      () => this.predicate.keys(),\r\n      () => {\r\n        this.pagingParams = new PagingParams();\r\n        this.activityRegistry.clear();\r\n        this.loadActivities();\r\n      }\r\n    );\r\n  }\r\n\r\n  setPagingParams = (pagingParams: PagingParams) => {\r\n    this.pagingParams = pagingParams;\r\n  };\r\n\r\n  setPredicate = (predicate: string, value: string | Date) => {\r\n    const resetPredicate = () => {\r\n      this.predicate.forEach((value, key) => {\r\n        if (key !== \"startDate\") this.predicate.delete(key);\r\n      });\r\n    };\r\n\r\n    switch (predicate) {\r\n      case \"all\":\r\n        resetPredicate();\r\n        this.predicate.set(\"all\", true);\r\n        break;\r\n      case \"isGoing\":\r\n        resetPredicate();\r\n        this.predicate.set(\"isGoing\", true);\r\n        break;\r\n      case \"isHost\":\r\n        resetPredicate();\r\n        this.predicate.set(\"isHost\", true);\r\n        break;\r\n      case \"startDate\":\r\n        this.predicate.delete(\"startDate\");\r\n        this.predicate.set(\"startDate\", value);\r\n        break;\r\n    }\r\n  };\r\n\r\n  get axiosParams() {\r\n    const params = new URLSearchParams();\r\n    params.append(\"pageNumber\", this.pagingParams.pageNumber.toString());\r\n    params.append(\"pageSize\", this.pagingParams.pageSize.toString());\r\n    this.predicate.forEach((value, key) => {\r\n      if (key === \"startDate\") {\r\n        params.append(key, (value as Date).toISOString());\r\n      } else {\r\n        params.append(key, value);\r\n      }\r\n    });\r\n    return params;\r\n  }\r\n\r\n  get activitiesByDate() {\r\n    return Array.from(this.activityRegistry.values()).sort(\r\n      (a, b) => a.date!.getTime() - b.date!.getTime()\r\n    );\r\n  }\r\n\r\n  get groupedActivities() {\r\n    return Object.entries(\r\n      this.activitiesByDate.reduce((activities, activity) => {\r\n        const date = format(activity.date!, \"dd MMM yyyy\");\r\n        activities[date] = activities[date]\r\n          ? [...activities[date], activity]\r\n          : [activity];\r\n        return activities;\r\n      }, {} as { [key: string]: Activity[] })\r\n    );\r\n  }\r\n\r\n  private setActivity = (activity: Activity) => {\r\n    activity.date = new Date(activity.date!);\r\n    const user = store.userStore.user;\r\n    if (user) {\r\n      activity.isGoing = activity.attendees?.some(\r\n        (x) => x.username === user.username\r\n      );\r\n      activity.isHost = activity.hostUsername === user.username;\r\n      activity.host = activity.attendees?.find(\r\n        (x) => x.username === activity.hostUsername\r\n      );\r\n    }\r\n\r\n    this.activityRegistry.set(activity.id, activity);\r\n  };\r\n\r\n  loadActivities = async () => {\r\n    this.setIsInitialLoading(true);\r\n    try {\r\n      const result = await agent.Activities.list(this.axiosParams);\r\n      runInAction(() => {\r\n        result.data.forEach((activity) => {\r\n          this.setActivity(activity);\r\n        });\r\n        this.setPagination(result.pagination);\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n    } finally {\r\n      this.setIsInitialLoading(false);\r\n    }\r\n  };\r\n\r\n  setPagination = (pagination: Pagination) => {\r\n    this.pagination = pagination;\r\n  };\r\n\r\n  loadActivity = async (id: string) => {\r\n    let activity = this.getActivity(id);\r\n    if (activity) {\r\n      this.selectedActivity = activity;\r\n      return activity;\r\n    }\r\n    this.setIsInitialLoading(true);\r\n    try {\r\n      activity = await agent.Activities.details(id);\r\n      this.setActivity(activity);\r\n      runInAction(() => {\r\n        this.editMode = false;\r\n        this.selectedActivity = activity;\r\n      });\r\n      return activity;\r\n    } catch (error) {\r\n      console.log(error);\r\n    } finally {\r\n      this.setIsInitialLoading(false);\r\n    }\r\n  };\r\n\r\n  private getActivity(id: string) {\r\n    return this.activityRegistry.get(id);\r\n  }\r\n\r\n  setIsInitialLoading = (state: boolean) => (this.isInitialLoading = state);\r\n\r\n  createActivity = async (activity: ActivityFormValues) => {\r\n    const user = store.userStore.user;\r\n    const attendee = new Profile(user!);\r\n\r\n    try {\r\n      await agent.Activities.create(activity);\r\n      const newActivity = new Activity(activity);\r\n      newActivity.hostUsername = user!.username;\r\n      newActivity.attendees = [attendee];\r\n      this.setActivity(newActivity);\r\n\r\n      runInAction(() => {\r\n        this.selectedActivity = newActivity;\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  updateActivity = async (activity: ActivityFormValues) => {\r\n    try {\r\n      await agent.Activities.update(activity);\r\n      runInAction(() => {\r\n        if (activity.id) {\r\n          const updatedActivity = {\r\n            ...this.getActivity(activity.id),\r\n            ...activity,\r\n          };\r\n          this.activityRegistry.set(activity.id, updatedActivity as Activity);\r\n          this.selectedActivity = updatedActivity as Activity;\r\n        }\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  deleteActivity = async (id: string) => {\r\n    this.isLoading = true;\r\n    try {\r\n      await agent.Activities.delete(id);\r\n      runInAction(() => {\r\n        this.activityRegistry.delete(id);\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n    } finally {\r\n      runInAction(() => {\r\n        this.isLoading = false;\r\n      });\r\n    }\r\n  };\r\n\r\n  updateAttendance = async () => {\r\n    const user = store.userStore.user;\r\n    this.isLoading = true;\r\n\r\n    try {\r\n      await agent.Activities.attend(this.selectedActivity!.id);\r\n      runInAction(() => {\r\n        if (this.selectedActivity?.isGoing) {\r\n          this.selectedActivity.attendees =\r\n            this.selectedActivity.attendees?.filter(\r\n              (a) => a.username !== user?.username\r\n            );\r\n          this.selectedActivity.isGoing = false;\r\n        } else {\r\n          const attendee = new Profile(user!);\r\n          this.selectedActivity?.attendees?.push(attendee);\r\n          this.selectedActivity!.isGoing = true;\r\n        }\r\n        this.activityRegistry.set(\r\n          this.selectedActivity!.id,\r\n          this.selectedActivity!\r\n        );\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n    } finally {\r\n      runInAction(() => {\r\n        this.isLoading = false;\r\n      });\r\n    }\r\n  };\r\n\r\n  cancelActivityToggle = async () => {\r\n    this.isLoading = true;\r\n    try {\r\n      await agent.Activities.attend(this.selectedActivity!.id);\r\n      runInAction(() => {\r\n        this.selectedActivity!.isCancelled =\r\n          !this.selectedActivity?.isCancelled;\r\n        this.activityRegistry.set(\r\n          this.selectedActivity!.id,\r\n          this.selectedActivity!\r\n        );\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n    } finally {\r\n      runInAction(() => {\r\n        this.isLoading = false;\r\n      });\r\n    }\r\n  };\r\n\r\n  clearSelectedActivity = () => {\r\n    this.selectedActivity = undefined;\r\n  };\r\n\r\n  updateAttendeeFollowing = (username: string) => {\r\n    this.activityRegistry.forEach((activity) => {\r\n      activity.attendees.forEach((attendee) => {\r\n        if (attendee.username === username) {\r\n          attendee.isFollowing\r\n            ? attendee.followersCount--\r\n            : attendee.followingCount++;\r\n          attendee.isFollowing = !attendee.isFollowing;\r\n        }\r\n      });\r\n    });\r\n  };\r\n}\r\n","import { Photo, Profile, UserActivity } from \"../models/profile\";\r\nimport { makeAutoObservable, reaction, runInAction } from \"mobx\";\r\n\r\nimport agent from \"../api/agent\";\r\nimport { store } from \"./store\";\r\n\r\nexport default class ProfileStore {\r\n  profile: Profile | null = null;\r\n  isLoadingProfile = false;\r\n  isUploading = false;\r\n  isLoading = false;\r\n  followings: Profile[] = [];\r\n  activeTab: string | null = null;\r\n  activities: UserActivity[] = [];\r\n  isLoadingActivities = false;\r\n\r\n  constructor() {\r\n    makeAutoObservable(this);\r\n\r\n    reaction(\r\n      () => this.activeTab,\r\n      (tab) => {\r\n        if (tab === \"followers\" || tab === \"following\") {\r\n          this.loadFollowings(tab);\r\n        } else {\r\n          this.followings = [];\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n  setActiveTab = (tab: string | null) => {\r\n    this.activeTab = tab;\r\n  };\r\n\r\n  get isCurrentUser() {\r\n    if (store.userStore.user && this.profile) {\r\n      return store.userStore.user.username === this.profile.username;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  loadProfile = async (username: string) => {\r\n    this.isLoadingProfile = true;\r\n    try {\r\n      const profile = await agent.Profiles.get(username);\r\n      runInAction(() => {\r\n        this.profile = profile;\r\n      });\r\n      return this.profile;\r\n    } catch (error) {\r\n      console.log(error);\r\n    } finally {\r\n      runInAction(() => {\r\n        this.isLoadingProfile = false;\r\n      });\r\n    }\r\n  };\r\n\r\n  uploadPhoto = async (file: Blob) => {\r\n    this.isUploading = true;\r\n    try {\r\n      const response = await agent.Profiles.uploadPhoto(file);\r\n      const photo = response.data;\r\n      runInAction(() => {\r\n        if (this.profile) {\r\n          this.profile.photos?.push(photo);\r\n          if (photo.isMain && store.userStore.user) {\r\n            store.userStore.setImage(photo.url);\r\n            this.profile.image = photo.url;\r\n            store.activityStore.setIsInitialLoading(true);\r\n          }\r\n        }\r\n      });\r\n      //return this.profile;\r\n    } catch (error) {\r\n      console.log(error);\r\n    } finally {\r\n      runInAction(() => {\r\n        this.isUploading = false;\r\n      });\r\n    }\r\n  };\r\n\r\n  setMainPhoto = async (photo: Photo) => {\r\n    this.isLoading = true;\r\n    try {\r\n      await agent.Profiles.setMainPhoto(photo.id);\r\n      store.userStore.setImage(photo.url);\r\n      store.activityStore.setIsInitialLoading(true);\r\n      runInAction(() => {\r\n        if (this.profile && this.profile.photos) {\r\n          const currentMainPhoto = this.profile.photos.find((p) => p.isMain);\r\n          if (currentMainPhoto) currentMainPhoto.isMain = false;\r\n          const newMainPhoto = this.profile.photos.find(\r\n            (p) => p.id === photo.id\r\n          );\r\n          if (newMainPhoto) newMainPhoto.isMain = true;\r\n          this.profile.image = photo.url;\r\n        }\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n    } finally {\r\n      runInAction(() => {\r\n        this.isLoading = false;\r\n      });\r\n    }\r\n  };\r\n\r\n  deletePhoto = async (photo: Photo) => {\r\n    this.isLoading = true;\r\n    try {\r\n      await agent.Profiles.deletePhoto(photo.id);\r\n      runInAction(() => {\r\n        if (this.profile && this.profile.photos) {\r\n          this.profile.photos = this.profile?.photos?.filter(\r\n            (p) => p.id !== photo.id\r\n          );\r\n        }\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n    } finally {\r\n      runInAction(() => {\r\n        this.isLoading = false;\r\n      });\r\n    }\r\n  };\r\n\r\n  updateProfile = async (profile: Profile) => {\r\n    this.isLoading = true;\r\n    try {\r\n      await agent.Profiles.updateProfile(profile);\r\n      store.userStore.setDisplayName(profile.displayName);\r\n      store.activityStore.setIsInitialLoading(true);\r\n\r\n      runInAction(() => {\r\n        if (this.profile) {\r\n          this.profile.displayName = profile.displayName;\r\n          this.profile.bio = profile.bio;\r\n        }\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n    } finally {\r\n      runInAction(() => {\r\n        this.isLoading = false;\r\n      });\r\n    }\r\n  };\r\n\r\n  updateFollowing = async (username: string, following: boolean) => {\r\n    this.isLoading = true;\r\n    try {\r\n      await agent.Profiles.updateFollowing(username);\r\n      store.activityStore.updateAttendeeFollowing(username);\r\n\r\n      runInAction(() => {\r\n        if (\r\n          this.profile &&\r\n          this.profile.username !== store.userStore.user?.username &&\r\n          this.profile.username === username\r\n        ) {\r\n          following\r\n            ? this.profile.followersCount++\r\n            : this.profile.followersCount--;\r\n          this.profile.isFollowing = !this.profile.isFollowing;\r\n        }\r\n        if (\r\n          this.profile &&\r\n          this.profile.username === store.userStore.user?.username\r\n        ) {\r\n          following\r\n            ? this.profile.followingCount++\r\n            : this.profile.followingCount--;\r\n        }\r\n        this.followings.forEach((profile) => {\r\n          if (profile.username === username) {\r\n            profile.isFollowing\r\n              ? profile.followersCount--\r\n              : profile.followersCount++;\r\n            profile.isFollowing = !profile.isFollowing;\r\n          }\r\n        });\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n    } finally {\r\n      runInAction(() => {\r\n        this.isLoading = false;\r\n      });\r\n    }\r\n  };\r\n\r\n  loadFollowings = async (predicate: string) => {\r\n    this.isLoading = true;\r\n    try {\r\n      let followings: Profile[] = [];\r\n      if (this.profile) {\r\n        followings = await agent.Profiles.listFollowings(\r\n          this.profile.username,\r\n          predicate\r\n        );\r\n      }\r\n      runInAction(() => {\r\n        this.followings = followings;\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n    } finally {\r\n      runInAction(() => {\r\n        this.isLoading = false;\r\n      });\r\n    }\r\n  };\r\n\r\n  loadActivities = async (predicate: string) => {\r\n    this.isLoadingActivities = true;\r\n    try {\r\n      if (this.profile) {\r\n        let activities = await agent.Profiles.listActivities(\r\n          this.profile.username,\r\n          predicate\r\n        );\r\n        runInAction(() => {\r\n          this.activities = activities;\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    } finally {\r\n      runInAction(() => {\r\n        this.isLoadingActivities = false;\r\n      });\r\n    }\r\n  };\r\n}\r\n","import { User, UserFormValues } from \"../models/user\";\r\nimport { makeAutoObservable, runInAction } from \"mobx\";\r\n\r\nimport agent from \"../api/agent\";\r\nimport { history } from \"../..\";\r\nimport { store } from \"./store\";\r\n\r\nexport default class UserStore {\r\n  user: User | null = null;\r\n\r\n  constructor() {\r\n    makeAutoObservable(this);\r\n  }\r\n\r\n  get isLoggedIn() {\r\n    return Boolean(this.user);\r\n  }\r\n\r\n  login = async (creds: UserFormValues) => {\r\n    try {\r\n      const user = await agent.Account.login(creds);\r\n      store.commonStore.setToken(user.token);\r\n      runInAction(() => (this.user = user));\r\n      history.push(\"/activities\");\r\n      store.modalStore.closeModal();\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  register = async (creds: UserFormValues) => {\r\n    try {\r\n      const user = await agent.Account.register(creds);\r\n      store.commonStore.setToken(user.token);\r\n      runInAction(() => (this.user = user));\r\n      history.push(\"/activities\");\r\n      store.modalStore.closeModal();\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  logout = () => {\r\n    store.commonStore.setToken(null);\r\n    this.user = null;\r\n    history.push(\"/\");\r\n  };\r\n\r\n  getUser = async () => {\r\n    try {\r\n      const user = await agent.Account.current();\r\n      runInAction(() => (this.user = user));\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  setImage = (image: string) => {\r\n    if (this.user) {\r\n      this.user.image = image;\r\n    }\r\n  };\r\n\r\n  setDisplayName = (name: string) => {\r\n    if (this.user) {\r\n      this.user.displayName = name;\r\n    }\r\n  };\r\n}\r\n","import { createContext, useContext } from \"react\";\r\n\r\nimport ActivityStore from \"./activityStore\";\r\nimport CommentStore from \"./commentStore\";\r\nimport CommonStore from \"./commonStore\";\r\nimport ModalStore from \"./modalStore\";\r\nimport ProfileStore from \"./profileStore\";\r\nimport UserStore from \"./userStore\";\r\n\r\ninterface Store {\r\n  activityStore: ActivityStore;\r\n  commonStore: CommonStore;\r\n  userStore: UserStore;\r\n  modalStore: ModalStore;\r\n  profileStore: ProfileStore;\r\n  commentStore: CommentStore;\r\n}\r\n\r\nexport const store: Store = {\r\n  activityStore: new ActivityStore(),\r\n  commonStore: new CommonStore(),\r\n  userStore: new UserStore(),\r\n  modalStore: new ModalStore(),\r\n  profileStore: new ProfileStore(),\r\n  commentStore: new CommentStore(),\r\n};\r\n\r\nexport const StoreContext = createContext(store);\r\n\r\nexport function useStore() {\r\n  return useContext(StoreContext);\r\n}\r\n","import { makeAutoObservable, reaction } from \"mobx\";\r\n\r\nimport { ServerError } from \"../models/ServerError\";\r\n\r\nexport default class CommonStore {\r\n  error: ServerError | null = null;\r\n  token: string | null = localStorage.getItem(\"jwt\");\r\n  appLoaded = false;\r\n\r\n  constructor() {\r\n    makeAutoObservable(this);\r\n\r\n    reaction(\r\n      () => this.token,\r\n      (token) => {\r\n        if (token) localStorage.setItem(\"jwt\", token);\r\n        else localStorage.removeItem(\"jwt\");\r\n      }\r\n    );\r\n  }\r\n\r\n  setServerError = (error: ServerError) => {\r\n    this.error = error;\r\n  };\r\n\r\n  setToken = (token: string | null) => {\r\n    this.token = token;\r\n  };\r\n\r\n  setAppLoaded = () => {\r\n    this.appLoaded = true;\r\n  };\r\n}\r\n","import { makeAutoObservable } from \"mobx\";\r\n\r\ninterface Modal {\r\n  open: boolean;\r\n  body: JSX.Element | null;\r\n  header: string;\r\n}\r\n\r\nexport default class ModalStore {\r\n  modal: Modal = {\r\n    open: false,\r\n    body: null,\r\n    header: \"\",\r\n  };\r\n\r\n  constructor() {\r\n    makeAutoObservable(this);\r\n  }\r\n\r\n  openModal = (content: JSX.Element, header: string = \"\") => {\r\n    this.modal.open = true;\r\n    this.modal.body = content;\r\n    this.modal.header = header;\r\n  };\r\n\r\n  closeModal = () => {\r\n    this.modal.open = false;\r\n    this.modal.body = null;\r\n    this.modal.header = \"\";\r\n  };\r\n}\r\n","import {\r\n  HubConnection,\r\n  HubConnectionBuilder,\r\n  LogLevel,\r\n} from \"@microsoft/signalr\";\r\nimport { makeAutoObservable, runInAction } from \"mobx\";\r\n\r\nimport { ChatComment } from \"../models/chatComment\";\r\nimport { store } from \"./store\";\r\n\r\nexport default class CommentStore {\r\n  comments: ChatComment[] = [];\r\n  hubConnection: HubConnection | null = null;\r\n\r\n  constructor() {\r\n    makeAutoObservable(this);\r\n  }\r\n\r\n  createHubConnection = (activityId: string) => {\r\n    if (store.activityStore.selectedActivity) {\r\n      this.hubConnection = new HubConnectionBuilder()\r\n        .withUrl(`${process.env.REACT_APP_CHAT_URL}?activityId=` + activityId, {\r\n          accessTokenFactory: () => store.userStore.user?.token!,\r\n        })\r\n        .withAutomaticReconnect()\r\n        .configureLogging(LogLevel.Information)\r\n        .build();\r\n\r\n      this.hubConnection\r\n        .start()\r\n        .catch((error) =>\r\n          console.log(\"Error establishing connection: \", error)\r\n        );\r\n\r\n      this.hubConnection.on(\"LoadComments\", (comments: ChatComment[]) => {\r\n        runInAction(() => {\r\n          comments.forEach((comment) => {\r\n            comment.createdAt = new Date(comment.createdAt + \"Z\");\r\n          });\r\n          this.comments = comments;\r\n        });\r\n      });\r\n\r\n      this.hubConnection.on(\"ReceiveComment\", (comment: ChatComment) => {\r\n        runInAction(() => {\r\n          comment.createdAt = new Date(comment.createdAt);\r\n          this.comments.unshift(comment);\r\n        });\r\n      });\r\n    }\r\n  };\r\n\r\n  stopHubConnection = () => {\r\n    this.hubConnection\r\n      ?.stop()\r\n      .catch((error) => console.log(\"Error stopping connection: \", error));\r\n  };\r\n\r\n  clearComments = () => {\r\n    this.comments = [];\r\n    this.stopHubConnection();\r\n  };\r\n\r\n  addComment = async (values: any) => {\r\n    values.activityId = store.activityStore.selectedActivity?.id;\r\n    try {\r\n      await this.hubConnection?.invoke(\"SendComment\", values);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n}\r\n","import { ListGroup, ListGroupItem } from \"react-bootstrap\";\r\n\r\nimport Calendar from \"react-calendar\";\r\nimport { FunnelFill } from \"react-bootstrap-icons\";\r\nimport React from \"react\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport { useStore } from \"./../../../app/stores/store\";\r\n\r\nexport default observer(function ActivitiesFilters() {\r\n  const {\r\n    activityStore: { predicate, setPredicate },\r\n  } = useStore();\r\n\r\n  return (\r\n    <>\r\n      <ListGroup className=\"mb-3 mt-5\">\r\n        <ListGroupItem className=\"h5 m-0 text-primary\">\r\n          <FunnelFill className=\"me-2\" />\r\n          Filters\r\n        </ListGroupItem>\r\n        <ListGroupItem\r\n          active={predicate.has(\"all\")}\r\n          onClick={() => setPredicate(\"all\", \"true\")}\r\n        >\r\n          All Activities\r\n        </ListGroupItem>\r\n        <ListGroupItem\r\n          active={predicate.has(\"isGoing\")}\r\n          onClick={() => setPredicate(\"isGoing\", \"true\")}\r\n        >\r\n          I'm going\r\n        </ListGroupItem>\r\n        <ListGroupItem\r\n          active={predicate.has(\"isHost\")}\r\n          onClick={() => setPredicate(\"isHost\", \"true\")}\r\n        >\r\n          I'm hosting\r\n        </ListGroupItem>\r\n      </ListGroup>\r\n      <Calendar\r\n        onChange={(date: Date) => setPredicate(\"startDate\", date)}\r\n        value={predicate.get(\"startDate\") || new Date()}\r\n      />\r\n    </>\r\n  );\r\n});\r\n","import React, { ReactElement, useRef, useState } from \"react\";\r\n\r\nimport { Overlay } from \"react-bootstrap\";\r\n\r\ninterface Props {\r\n  mainComponent?: ReactElement;\r\n  popoverComponent?: ReactElement;\r\n}\r\n\r\nexport default function Popover({\r\n  mainComponent,\r\n  popoverComponent,\r\n  ...props\r\n}: Props) {\r\n  const [show, setShow] = useState(false);\r\n  const target = useRef(null);\r\n\r\n  return (\r\n    <>\r\n      <span\r\n        ref={target}\r\n        onMouseEnter={() => setShow(true)}\r\n        onMouseLeave={() => setShow(false)}\r\n      >\r\n        {mainComponent}\r\n      </span>\r\n\r\n      <Overlay target={target.current} show={show} placement=\"right\">\r\n        {({ placement, arrowProps, show: _show, popper, ...props }) => (\r\n          <div\r\n            {...props}\r\n            onMouseEnter={() => setShow(true)}\r\n            onMouseLeave={() => setShow(false)}\r\n          >\r\n            {popoverComponent}\r\n          </div>\r\n        )}\r\n      </Overlay>\r\n    </>\r\n  );\r\n}\r\n","import { Button } from \"react-bootstrap\";\r\nimport { Profile } from \"../../app/models/profile\";\r\nimport { SyntheticEvent } from \"react\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport { useStore } from \"../../app/stores/store\";\r\n\r\ninterface Props {\r\n  profile: Profile;\r\n}\r\n\r\nexport default observer(function FollowButton({ profile }: Props) {\r\n  const { profileStore, userStore } = useStore();\r\n  const { updateFollowing, isLoading } = profileStore;\r\n\r\n  if (userStore.user?.username === profile.username) return null;\r\n\r\n  function handleFollow(e: SyntheticEvent, username: string) {\r\n    e.preventDefault();\r\n    profile.isFollowing\r\n      ? updateFollowing(username, false)\r\n      : updateFollowing(username, true);\r\n  }\r\n\r\n  return (\r\n    <Button\r\n      className=\"w-100 mt-2\"\r\n      variant={profile.isFollowing ? \"danger\" : \"success\"}\r\n      disabled={isLoading}\r\n      onClick={(e) => handleFollow(e, profile.username)}\r\n    >\r\n      {profile.isFollowing\r\n        ? isLoading\r\n          ? \"Unfollowing...\"\r\n          : \"Unfollow\"\r\n        : isLoading\r\n        ? \"Following...\"\r\n        : \"Follow\"}\r\n    </Button>\r\n  );\r\n});\r\n","import { Card, Image } from \"react-bootstrap\";\r\n\r\nimport FollowButton from \"./FollowButton\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { PeopleFill } from \"react-bootstrap-icons\";\r\nimport { Profile } from \"../../app/models/profile\";\r\nimport React from \"react\";\r\nimport { observer } from \"mobx-react-lite\";\r\n\r\ninterface Props {\r\n  profile: Profile;\r\n}\r\n\r\nexport default observer(function ProfileCard({ profile }: Props) {\r\n  function trimDescr(descr: string | undefined) {\r\n    if (descr) {\r\n      return descr.length > 28 ? descr.substr(0, 25).trim() + \"...\" : descr;\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Card style={{ maxWidth: \"300px\" }}>\r\n      <Card.Header as=\"h3\">\r\n        <Link to={`/profiles/${profile.username}`}>{profile.displayName}</Link>\r\n      </Card.Header>\r\n      <Card.Body>\r\n        <Image\r\n          src={profile.image || \"/assets/user.png\"}\r\n          className=\"w-100\"\r\n          rounded\r\n        />\r\n        <p>{trimDescr(profile.bio)}</p>\r\n        <FollowButton profile={profile} />\r\n        <p>\r\n          <PeopleFill height=\"30\" className=\"me-2\" />\r\n          {profile.followersCount} followers\r\n        </p>\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n});\r\n","import { Image, Stack } from \"react-bootstrap\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\nimport Popover from \"../../../app/common/popover/Popover\";\r\nimport { Profile } from \"../../../app/models/profile\";\r\nimport ProfileCard from \"../../profiles/ProfileCard\";\r\nimport React from \"react\";\r\nimport { observer } from \"mobx-react-lite\";\r\n\r\ninterface Props {\r\n  attendees: Profile[];\r\n}\r\n\r\nexport default observer(function ActivitiesListItemAttendee({\r\n  attendees,\r\n}: Props) {\r\n  return (\r\n    <Stack direction=\"horizontal\" as=\"ul\" className=\"list-unstyled\">\r\n      {attendees.map((attendee) => (\r\n        <li key={attendee.username} className=\"me-2\">\r\n          <Popover\r\n            mainComponent={\r\n              <Link to={`/profiles/${attendee.username}`}>\r\n                <Image\r\n                  roundedCircle\r\n                  src={attendee.image || \"/assets/user.png\"}\r\n                  height=\"40\"\r\n                  className={\r\n                    attendee.isFollowing ? \"border border-2 border-warning\" : \"\"\r\n                  }\r\n                />\r\n              </Link>\r\n            }\r\n            popoverComponent={<ProfileCard profile={attendee} />}\r\n          />\r\n        </li>\r\n      ))}\r\n    </Stack>\r\n  );\r\n});\r\n","import {\r\n  Alert,\r\n  Badge,\r\n  Button,\r\n  Card,\r\n  Image,\r\n  ListGroup,\r\n  ListGroupItem,\r\n} from \"react-bootstrap\";\r\nimport { ClockFill, GeoAltFill } from \"react-bootstrap-icons\";\r\nimport React, { SyntheticEvent, useState } from \"react\";\r\n\r\nimport ActivitiesListItemAttendee from \"./ActivitiesListItemAttendee\";\r\nimport { Activity } from \"../../../app/models/activity\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { format } from \"date-fns\";\r\nimport { useStore } from \"../../../app/stores/store\";\r\n\r\ninterface Props {\r\n  activity: Activity;\r\n}\r\n\r\nexport default function ActivitiesListItem({ activity }: Props) {\r\n  const [target, setTarget] = useState(\"\");\r\n  const { activityStore } = useStore();\r\n  const { isLoading, deleteActivity } = activityStore;\r\n\r\n  function handleActivityDelete(\r\n    event: SyntheticEvent<HTMLButtonElement>,\r\n    id: string\r\n  ) {\r\n    setTarget(event.currentTarget.name);\r\n    deleteActivity(id);\r\n  }\r\n\r\n  return (\r\n    <Card className=\"mb-3\" key={activity.id}>\r\n      <Card.Header>\r\n        {activity.isCancelled && <Alert variant=\"danger\">Cancelled</Alert>}\r\n        <Image\r\n          roundedCircle\r\n          src={activity.host?.image || \"/assets/user.png\"}\r\n          height={100}\r\n          className=\"float-start my-2 mx-3\"\r\n        />\r\n        <Link to={`/activities/${activity.id}`}>\r\n          <Card.Title className=\"link-dark\">{activity.title}</Card.Title>\r\n        </Link>\r\n        <Card.Subtitle>\r\n          Hosted by{\" \"}\r\n          <Link to={`/profiles/${activity.hostUsername}`}>\r\n            {activity.host?.displayName}\r\n          </Link>\r\n        </Card.Subtitle>\r\n        {activity.isHost && (\r\n          <Badge bg=\"warning\">You are hosting this activity</Badge>\r\n        )}\r\n        {!activity.isHost && activity.isGoing && (\r\n          <Badge bg=\"success\">You are going to this activity</Badge>\r\n        )}\r\n      </Card.Header>\r\n\r\n      <Card.Body className=\"p-0\">\r\n        <ListGroup>\r\n          <ListGroupItem className=\"py-2\">\r\n            <ClockFill className=\"mx-2\" />\r\n            {format(activity.date!, \"dd MMM yyyy hh:mm\")}\r\n            <GeoAltFill className=\"mx-2\" />\r\n            {activity.city}, {activity.venue}\r\n          </ListGroupItem>\r\n          <ListGroupItem>\r\n            <Card.Text>{activity.description}</Card.Text>\r\n            <div className=\"float-end\">\r\n              <Link to={`/activities/${activity.id}`}>\r\n                <Button className=\"mx-3\" variant=\"primary\" type=\"button\">\r\n                  View\r\n                </Button>\r\n              </Link>\r\n              <Button\r\n                variant=\"danger\"\r\n                name={activity.id}\r\n                onClick={(e) => handleActivityDelete(e, activity.id)}\r\n              >\r\n                {isLoading && target === activity.id ? \"Loading...\" : \"Delete\"}\r\n              </Button>\r\n            </div>\r\n          </ListGroupItem>\r\n        </ListGroup>\r\n      </Card.Body>\r\n      <Card.Footer>\r\n        <ActivitiesListItemAttendee attendees={activity.attendees!} />\r\n        <Badge bg=\"secondary\">{activity.category}</Badge>\r\n      </Card.Footer>\r\n    </Card>\r\n  );\r\n}\r\n","import { ListGroup, Stack } from \"react-bootstrap\";\r\n\r\nimport ActivitiesListItem from \"./ActivitiesListItem\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport { useStore } from \"../../../app/stores/store\";\r\n\r\nfunction ActivityList() {\r\n  const { activityStore } = useStore();\r\n  const { groupedActivities } = activityStore;\r\n\r\n  return (\r\n    <ListGroup>\r\n      {groupedActivities.map(([groupDate, activities]) => {\r\n        return (\r\n          <Stack gap={0} key={groupDate} className=\"m-3\">\r\n            <p className=\"h5 text-primary\">{groupDate}</p>\r\n            {activities.map((item) => (\r\n              <ActivitiesListItem activity={item} key={item.id} />\r\n            ))}\r\n          </Stack>\r\n        );\r\n      })}\r\n    </ListGroup>\r\n  );\r\n}\r\n\r\nexport default observer(ActivityList);\r\n","import {\r\n  Card,\r\n  Image,\r\n  ListGroup,\r\n  ListGroupItem,\r\n  Placeholder,\r\n} from \"react-bootstrap\";\r\n\r\nimport React from \"react\";\r\n\r\nexport default function ActivityListItemPlaceholder() {\r\n  return (\r\n    <>\r\n      <Card className=\"mb-3\">\r\n        <Card.Header>\r\n          <Image\r\n            roundedCircle\r\n            src=\"/assets/user.png\"\r\n            height={100}\r\n            className=\"float-start my-2 mx-3\"\r\n          />\r\n          <Placeholder as={Card.Title} animation=\"glow\">\r\n            <Placeholder xs={6} />\r\n          </Placeholder>\r\n        </Card.Header>\r\n\r\n        <Card.Body className=\"p-0\">\r\n          <ListGroup>\r\n            <ListGroupItem className=\"py-2\">\r\n              <Placeholder as={Card.Text} animation=\"glow\">\r\n                <Placeholder xs={7} />\r\n              </Placeholder>\r\n            </ListGroupItem>\r\n            <ListGroupItem>\r\n              <Placeholder as={Card.Text} animation=\"glow\">\r\n                <Placeholder xs={7} /> <Placeholder xs={4} />{\" \"}\r\n                <Placeholder xs={4} />\r\n              </Placeholder>\r\n            </ListGroupItem>\r\n          </ListGroup>\r\n        </Card.Body>\r\n        <Card.Footer>\r\n          <Image roundedCircle src=\"/assets/user.png\" height=\"40\" />\r\n          <Image roundedCircle src=\"/assets/user.png\" height=\"40\" />\r\n        </Card.Footer>\r\n      </Card>\r\n    </>\r\n  );\r\n}\r\n","import { Col, Container, Row, Spinner } from \"react-bootstrap\";\r\nimport React, { useEffect, useState } from \"react\";\r\n\r\nimport ActivitiesFilters from \"./ActivitiesFilters\";\r\nimport ActivityList from \"./ActivityList\";\r\nimport ActivityListItemPlaceholder from \"./ActivityListItemPlaceholder\";\r\nimport InfiniteScroll from \"react-infinite-scroller\";\r\nimport { PagingParams } from \"../../../app/models/pagination\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport { useStore } from \"./../../../app/stores/store\";\r\n\r\nfunction ActivityDashboard() {\r\n  const { activityStore } = useStore();\r\n  const {\r\n    loadActivities,\r\n    isInitialLoading,\r\n    activityRegistry,\r\n    setPagingParams,\r\n    pagination,\r\n  } = activityStore;\r\n\r\n  const [loadingNext, setLoadingNext] = useState(false);\r\n\r\n  function handleGetNext() {\r\n    setLoadingNext(true);\r\n    setPagingParams(new PagingParams(pagination!.currentPage + 1));\r\n    loadActivities().then(() => setLoadingNext(false));\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (isInitialLoading || (activityRegistry && activityRegistry.size <= 1))\r\n      loadActivities();\r\n  }, [activityRegistry, isInitialLoading, loadActivities]);\r\n\r\n  return (\r\n    <Container className=\"py-4\">\r\n      <Row>\r\n        <Col sm={8}>\r\n          {isInitialLoading && !loadingNext ? (\r\n            <>\r\n              <ActivityListItemPlaceholder />\r\n              <ActivityListItemPlaceholder />\r\n            </>\r\n          ) : (\r\n            <InfiniteScroll\r\n              pageStart={0}\r\n              loadMore={handleGetNext}\r\n              hasMore={\r\n                !loadingNext &&\r\n                !!pagination &&\r\n                pagination.currentPage < pagination.totalPages\r\n              }\r\n              initialLoad={false}\r\n            >\r\n              <ActivityList />\r\n            </InfiniteScroll>\r\n          )}\r\n        </Col>\r\n        <Col sm={4}>\r\n          <ActivitiesFilters />\r\n        </Col>\r\n        <Col xs={8} className=\"text-center\">\r\n          {loadingNext && (\r\n            <Spinner animation=\"border\" role=\"status\">\r\n              <span className=\"visually-hidden\">Loading...</span>\r\n            </Spinner>\r\n          )}\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default observer(ActivityDashboard);\r\n","import * as Yup from \"yup\";\r\n\r\nimport { Button, Card, Image } from \"react-bootstrap\";\r\nimport { Field, FieldProps, Form, Formik } from \"formik\";\r\nimport React, { useEffect } from \"react\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\nimport { PencilFill } from \"react-bootstrap-icons\";\r\nimport { formatDistanceToNow } from \"date-fns/esm\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport { useStore } from \"./../../../app/stores/store\";\r\n\r\ninterface Props {\r\n  activityId: string;\r\n}\r\n\r\nexport default observer(function ActivityDetailedChat({ activityId }: Props) {\r\n  const { commentStore } = useStore();\r\n\r\n  useEffect(() => {\r\n    if (activityId) {\r\n      commentStore.createHubConnection(activityId);\r\n    }\r\n    return () => {\r\n      commentStore.clearComments();\r\n    };\r\n  }, [activityId, commentStore]);\r\n\r\n  return (\r\n    <Card className=\"mt-3\">\r\n      <Card.Header>Chat about this event</Card.Header>\r\n      <Card.Body>\r\n        <Formik\r\n          onSubmit={(values, { resetForm }) =>\r\n            commentStore.addComment(values).then(() => resetForm())\r\n          }\r\n          initialValues={{ body: \"\" }}\r\n          validationSchema={Yup.object({ body: Yup.string().required() })}\r\n        >\r\n          {({ isSubmitting, isValid, handleSubmit }) => (\r\n            <Form className=\"mb-3\">\r\n              <Field name=\"body\">\r\n                {(props: FieldProps) => (\r\n                  <textarea\r\n                    className=\"w-100\"\r\n                    placeholder=\"Enter your comment (Enter to submit, Shift+Enter for new line)\"\r\n                    {...props.field}\r\n                    onKeyPress={(e) => {\r\n                      if (e.key === \"Enter\" && e.shiftKey) {\r\n                        return;\r\n                      }\r\n                      if (e.key === \"Enter\") {\r\n                        e.preventDefault();\r\n                        isValid && handleSubmit();\r\n                      }\r\n                    }}\r\n                  ></textarea>\r\n                )}\r\n              </Field>\r\n              <Button\r\n                variant=\"primary\"\r\n                type=\"submit\"\r\n                disabled={isSubmitting || !isValid}\r\n                className=\"ms-auto d-block\"\r\n              >\r\n                <PencilFill /> Add reply\r\n              </Button>\r\n            </Form>\r\n          )}\r\n        </Formik>\r\n        {commentStore.comments.map((comment) => (\r\n          <div key={comment.id} className=\"d-flex\">\r\n            <Image\r\n              src={comment.image || \"/assets/user.png\"}\r\n              height={50}\r\n              rounded\r\n              className=\"me-2\"\r\n            />\r\n            <div>\r\n              <Link to={`/profiles/${comment.username}`}>\r\n                <span className=\"fw-bold\">{comment.displayName}</span>\r\n              </Link>{\" \"}\r\n              <span className=\"text-secondary\">\r\n                {formatDistanceToNow(comment.createdAt)} ago\r\n              </span>\r\n              <p style={{ whiteSpace: \"pre-wrap\" }}>{comment.body}</p>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n});\r\n","import { Badge, Button, Card } from \"react-bootstrap\";\r\n\r\nimport { Activity } from \"./../../../app/models/activity\";\r\nimport { Link } from \"react-router-dom\";\r\nimport React from \"react\";\r\nimport { format } from \"date-fns\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport { useStore } from \"../../../app/stores/store\";\r\n\r\ninterface Props {\r\n  activity: Activity;\r\n}\r\n\r\nexport default observer(function ActivityDetailedHeader({ activity }: Props) {\r\n  const { activityStore } = useStore();\r\n\r\n  return (\r\n    <Card className=\"mb-3\">\r\n      <div className=\"position-relative\">\r\n        <Card.Img\r\n          variant=\"top\"\r\n          src={`/assets/categoryImages/${activity.category}.jpg`}\r\n        />\r\n        <Card.ImgOverlay\r\n          className=\"opacity-50\"\r\n          style={{ backgroundColor: \"black\" }}\r\n        />\r\n        <Card.ImgOverlay className=\"text-white\">\r\n          {activity.isCancelled && (\r\n            <Badge bg=\"danger\">This activity is cancelled</Badge>\r\n          )}\r\n          <Card.Title>{activity.title}</Card.Title>\r\n          <Card.Text>{format(activity.date!, \"dd MMM yyyy\")}</Card.Text>\r\n          <Card.Text>\r\n            Hosted by{\" \"}\r\n            <Link\r\n              to={`/profiles/${activity.hostUsername}`}\r\n              className=\"text-white\"\r\n            >\r\n              {activity.host?.displayName}\r\n            </Link>\r\n          </Card.Text>\r\n        </Card.ImgOverlay>\r\n      </div>\r\n      <Card.Body>\r\n        {!activity.isGoing && (\r\n          <Button onClick={activityStore.updateAttendance}>\r\n            {activityStore.isLoading ? \"Joining...\" : \"Join activity\"}\r\n          </Button>\r\n        )}\r\n        {activity.isGoing && !activity.isHost && (\r\n          <Button\r\n            onClick={activityStore.updateAttendance}\r\n            variant=\"outline-secondary\"\r\n            className=\"mx-3\"\r\n          >\r\n            {activityStore.isLoading ? \"Cancelling..\" : \"Cancel attendance\"}\r\n          </Button>\r\n        )}\r\n        {activity.isHost && (\r\n          <>\r\n            <Button\r\n              onClick={activityStore.cancelActivityToggle}\r\n              variant={activity.isCancelled ? \"success\" : \"danger\"}\r\n              className=\"mx-3\"\r\n            >\r\n              {activityStore.isLoading\r\n                ? \"Processing..\"\r\n                : activity.isCancelled\r\n                ? \"Re-activate activity\"\r\n                : \"Cancel activity\"}\r\n            </Button>\r\n            <Link to={`/manage/${activity.id}`}>\r\n              <Button\r\n                variant=\"warning\"\r\n                className=\"float-end\"\r\n                disabled={activity.isCancelled}\r\n              >\r\n                Manage event\r\n              </Button>\r\n            </Link>\r\n          </>\r\n        )}\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n});\r\n","import { CalendarEventFill, GeoAltFill, InfoLg } from \"react-bootstrap-icons\";\r\nimport { ListGroup, ListGroupItem } from \"react-bootstrap\";\r\n\r\nimport { Activity } from \"../../../app/models/activity\";\r\nimport React from \"react\";\r\nimport { format } from \"date-fns\";\r\n\r\ninterface Props {\r\n  activity: Activity;\r\n}\r\nexport default function ActivityDetailedInfo({ activity }: Props) {\r\n  return (\r\n    <ListGroup>\r\n      <ListGroupItem>\r\n        <InfoLg className=\"me-2\" />\r\n        {activity.description}\r\n      </ListGroupItem>\r\n      <ListGroupItem>\r\n        <CalendarEventFill className=\"me-2\" />\r\n        {format(activity.date!, \"dd MMM yyyy hh:mm\")}\r\n      </ListGroupItem>\r\n      <ListGroupItem>\r\n        <GeoAltFill className=\"me-2\" />\r\n        {activity.city}, {activity.venue}\r\n      </ListGroupItem>\r\n    </ListGroup>\r\n  );\r\n}\r\n","import { Badge, Image, ListGroup, ListGroupItem } from \"react-bootstrap\";\r\n\r\nimport { Activity } from \"../../../app/models/activity\";\r\nimport { Link } from \"react-router-dom\";\r\nimport React from \"react\";\r\nimport { observer } from \"mobx-react-lite\";\r\n\r\ninterface Props {\r\n  activity: Activity;\r\n}\r\n\r\nexport default observer(function ActivityDetailedSidebar({\r\n  activity: { attendees, host },\r\n}: Props) {\r\n  if (!attendees) return null;\r\n\r\n  return (\r\n    <ListGroup>\r\n      <ListGroupItem active>\r\n        {attendees.length} {attendees.length === 1 ? \"Person\" : \"People\"} going\r\n      </ListGroupItem>\r\n\r\n      {attendees.map((attendee) => (\r\n        <ListGroupItem key={attendee.username} className=\"p-3\">\r\n          <Image\r\n            src={attendee.image || \"/assets/user.png\"}\r\n            height=\"60\"\r\n            className=\"float-start me-2\"\r\n            alt={attendee.username}\r\n          />\r\n          <h5>\r\n            <Link to={`/profiles/${attendee.username}`}>\r\n              {attendee.displayName}\r\n            </Link>{\" \"}\r\n            {attendee.username === host?.username && (\r\n              <Badge bg=\"warning\" className=\"float-end\">\r\n                Host\r\n              </Badge>\r\n            )}\r\n          </h5>\r\n          {attendee.isFollowing && (\r\n            <div className=\"text-warning\">Following</div>\r\n          )}\r\n        </ListGroupItem>\r\n      ))}\r\n    </ListGroup>\r\n  );\r\n});\r\n","import React, { HTMLProps } from \"react\";\r\n\r\nimport { Spinner } from \"react-bootstrap\";\r\n\r\ninterface Props extends HTMLProps<HTMLDivElement> {\r\n  content?: string;\r\n}\r\n\r\nexport default function LoadingComponent({ content, ...rest }: Props) {\r\n  return (\r\n    <div className=\"vw-100 vh-100 bg-light\" {...rest}>\r\n      <div className=\"d-flex h-100 justify-content-center align-items-center\">\r\n        <Spinner animation=\"border\" role=\"status\"></Spinner>\r\n        <span>{content ?? \"Loading...\"}</span>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import { Col, Container, Row } from \"react-bootstrap\";\r\nimport React, { useEffect } from \"react\";\r\n\r\nimport ActivityDetailedChat from \"./ActivityDetailedChat\";\r\nimport ActivityDetailedHeader from \"./ActivityDetailedHeader\";\r\nimport ActivityDetailedInfo from \"./ActivityDetailedInfo\";\r\nimport ActivityDetailedSidebar from \"./ActivityDetailedSidebar\";\r\nimport LoadingComponent from \"./../../../app/layout/LoadingComponent\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport { useParams } from \"react-router\";\r\nimport { useStore } from \"./../../../app/stores/store\";\r\n\r\nfunction ActivityDetails() {\r\n  const { id } = useParams<{ id: string }>();\r\n  const { activityStore } = useStore();\r\n  const {\r\n    selectedActivity,\r\n    loadActivity,\r\n    isInitialLoading,\r\n    clearSelectedActivity,\r\n  } = activityStore;\r\n\r\n  useEffect(() => {\r\n    if (id) loadActivity(id);\r\n    return () => clearSelectedActivity();\r\n  }, [clearSelectedActivity, id, loadActivity]);\r\n\r\n  if (isInitialLoading || !selectedActivity)\r\n    return <LoadingComponent content=\"Loading activity...\" />;\r\n\r\n  return (\r\n    <Container className=\"py-4\">\r\n      <Row>\r\n        <Col sm={8}>\r\n          <ActivityDetailedHeader activity={selectedActivity} />\r\n          <ActivityDetailedInfo activity={selectedActivity} />\r\n          <ActivityDetailedChat activityId={selectedActivity.id} />\r\n        </Col>\r\n        <Col sm={4}>\r\n          <ActivityDetailedSidebar activity={selectedActivity} />\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n    // <Card className=\"mb-3\">\r\n    //   <Card.Img\r\n    //     variant=\"top\"\r\n    //     src={`/assets/categoryImages/${selectedActivity.category}.jpg`}\r\n    //   />\r\n    //   <Card.Body>\r\n    //     <Card.Title>{selectedActivity.title}</Card.Title>\r\n    //     <Card.Subtitle>{selectedActivity.date}</Card.Subtitle>\r\n    //     <Card.Text>{selectedActivity.description}</Card.Text>\r\n    //     <ButtonGroup className=\"container-fluid\">\r\n    //       <NavLink to={`/manage/${selectedActivity.id}`}>\r\n    //         <Button variant=\"outline-primary\">Edit</Button>\r\n    //       </NavLink>\r\n    //       <NavLink to=\"/activities\">\r\n    //         <Button variant=\"outline-secondary\">Cancel</Button>\r\n    //       </NavLink>\r\n    //     </ButtonGroup>\r\n    //   </Card.Body>\r\n    // </Card>\r\n  );\r\n}\r\n\r\nexport default observer(ActivityDetails);\r\n","import ReactDatePicker, { ReactDatePickerProps } from \"react-datepicker\";\r\n\r\nimport { Form } from \"react-bootstrap\";\r\nimport React from \"react\";\r\nimport { useField } from \"formik\";\r\n\r\nexport default function DateInput(props: Partial<ReactDatePickerProps>) {\r\n  const [field, meta, helpers] = useField(props.name!);\r\n\r\n  return (\r\n    <Form.Group>\r\n      <ReactDatePicker\r\n        {...field}\r\n        {...props}\r\n        selected={(field.value && new Date(field.value)) || null}\r\n        onChange={(value) => helpers.setValue(value)}\r\n      />\r\n      {meta.touched && meta.error ? (\r\n        <Form.Control.Feedback type=\"invalid\">\r\n          {meta.error}\r\n        </Form.Control.Feedback>\r\n      ) : null}\r\n    </Form.Group>\r\n  );\r\n}\r\n","import { Form } from \"react-bootstrap\";\r\nimport React from \"react\";\r\nimport { useField } from \"formik\";\r\n\r\ninterface Props {\r\n  placeholder: string;\r\n  name: string;\r\n  options: { text: string; value: string }[];\r\n  label?: string;\r\n}\r\n\r\nexport default function SelectInput(props: Props) {\r\n  const [field, meta, helpers] = useField(props.name);\r\n\r\n  return (\r\n    <Form.Group>\r\n      <Form.Label>{props.label}</Form.Label>\r\n      <Form.Control\r\n        as=\"select\"\r\n        {...field}\r\n        {...props}\r\n        onChange={(e) => helpers.setValue(e.target.value)}\r\n        onBlur={() => helpers.setTouched(true)}\r\n        isInvalid={meta.touched && !!meta.error}\r\n      >\r\n        <option value=\"\">Choose one...</option>\r\n        {props.options.map((o) => (\r\n          <option value={o.value} key={o.value}>\r\n            {o.text}\r\n          </option>\r\n        ))}\r\n      </Form.Control>\r\n      {meta.touched && meta.error ? (\r\n        <Form.Control.Feedback type=\"invalid\">\r\n          {meta.error}\r\n        </Form.Control.Feedback>\r\n      ) : null}\r\n    </Form.Group>\r\n  );\r\n}\r\n","import { Form } from \"react-bootstrap\";\r\nimport React from \"react\";\r\nimport { useField } from \"formik\";\r\n\r\ninterface Props {\r\n  placeholder: string;\r\n  name: string;\r\n  label?: string;\r\n}\r\n\r\nexport default function TextArea(props: Props) {\r\n  const [field, meta] = useField(props.name);\r\n\r\n  return (\r\n    <Form.Group>\r\n      <Form.Label>{props.label}</Form.Label>\r\n      <Form.Control\r\n        {...field}\r\n        {...props}\r\n        as=\"textarea\"\r\n        isInvalid={meta.touched && !!meta.error}\r\n      />\r\n      {meta.touched && meta.error ? (\r\n        <Form.Control.Feedback type=\"invalid\">\r\n          {meta.error}\r\n        </Form.Control.Feedback>\r\n      ) : null}\r\n    </Form.Group>\r\n  );\r\n}\r\n","import { Form } from \"react-bootstrap\";\r\nimport React from \"react\";\r\nimport { useField } from \"formik\";\r\n\r\ninterface Props {\r\n  placeholder: string;\r\n  name: string;\r\n  label?: string;\r\n  type?: string;\r\n}\r\n\r\nexport default function TextInput(props: Props) {\r\n  const [field, meta] = useField(props.name);\r\n\r\n  return (\r\n    <Form.Group>\r\n      <Form.Label>{props.label}</Form.Label>\r\n      <Form.Control\r\n        {...field}\r\n        {...props}\r\n        isInvalid={meta.touched && !!meta.error}\r\n      />\r\n      {meta.touched && meta.error ? (\r\n        <Form.Control.Feedback type=\"invalid\">\r\n          {meta.error}\r\n        </Form.Control.Feedback>\r\n      ) : null}\r\n    </Form.Group>\r\n  );\r\n}\r\n","export const categoryOptions = [\r\n  { text: \"Drinks\", value: \"drinks\" },\r\n  { text: \"Culture\", value: \"culture\" },\r\n  { text: \"Film\", value: \"film\" },\r\n  { text: \"Food\", value: \"food\" },\r\n  { text: \"Music\", value: \"music\" },\r\n  { text: \"Travel\", value: \"travel\" },\r\n];\r\n","import * as Yup from \"yup\";\r\n\r\nimport { Button, Card, Container } from \"react-bootstrap\";\r\nimport { Form, Formik } from \"formik\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useHistory, useParams } from \"react-router\";\r\n\r\nimport { ActivityFormValues } from \"../../../app/models/activity\";\r\nimport DateInput from \"../../../app/common/form/DateInput\";\r\nimport { Link } from \"react-router-dom\";\r\nimport LoadingComponent from \"../../../app/layout/LoadingComponent\";\r\nimport SelectInput from \"../../../app/common/form/SelectInput\";\r\nimport TextArea from \"./../../../app/common/form/TextArea\";\r\nimport TextInput from \"../../../app/common/form/TextInput\";\r\nimport { categoryOptions } from \"./../../../app/common/options/categoryOptions\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport { useStore } from \"./../../../app/stores/store\";\r\nimport { v4 as uuid } from \"uuid\";\r\n\r\nfunction ActivityForm() {\r\n  const { activityStore } = useStore();\r\n  const { createActivity, updateActivity, loadActivity, isInitialLoading } =\r\n    activityStore;\r\n\r\n  const { id } = useParams<{ id: string }>();\r\n  const history = useHistory();\r\n\r\n  const validationSchema = Yup.object({\r\n    title: Yup.string().required(\"The activity title is required\"),\r\n    description: Yup.string().required(\"The activity description is required\"),\r\n    date: Yup.string().required(\"The date is required\").nullable(),\r\n    category: Yup.string().required(),\r\n    city: Yup.string().required(),\r\n    venue: Yup.string().required(),\r\n  });\r\n\r\n  const [activity, setActivity] = useState<ActivityFormValues>(\r\n    new ActivityFormValues()\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (id)\r\n      loadActivity(id).then((activity) =>\r\n        setActivity(new ActivityFormValues(activity))\r\n      );\r\n  }, [id, loadActivity]);\r\n\r\n  function handleFormSubmit(activity: ActivityFormValues) {\r\n    if (!activity.id) {\r\n      const newActivity = { ...activity, id: uuid() };\r\n      createActivity(newActivity).then(() =>\r\n        history.push(`/activities/${newActivity.id}`)\r\n      );\r\n    } else {\r\n      updateActivity(activity).then(() =>\r\n        history.push(`/activities/${activity.id}`)\r\n      );\r\n    }\r\n  }\r\n\r\n  if (isInitialLoading) <LoadingComponent />;\r\n\r\n  return (\r\n    <Container>\r\n      <Card className=\"mt-3\">\r\n        <Card.Body>\r\n          <Formik\r\n            initialValues={activity}\r\n            enableReinitialize\r\n            onSubmit={(values) => handleFormSubmit(values)}\r\n            validationSchema={validationSchema}\r\n          >\r\n            {({ handleSubmit, dirty, isSubmitting, isValid }) => (\r\n              <Form onSubmit={handleSubmit} autoComplete=\"off\">\r\n                <h5>Activity details</h5>\r\n                <TextInput placeholder=\"Title\" name=\"title\" />\r\n                <TextArea placeholder=\"Description\" name=\"description\" />\r\n                <SelectInput\r\n                  placeholder=\"Category\"\r\n                  name=\"category\"\r\n                  options={categoryOptions}\r\n                />\r\n                <DateInput\r\n                  placeholderText=\"Date\"\r\n                  name=\"date\"\r\n                  showTimeSelect\r\n                  timeCaption=\"time\"\r\n                  timeFormat=\"hh:mm\"\r\n                  dateFormat=\"MMMM d, yyyy hh:mm\"\r\n                  className=\"form-control mt-4\"\r\n                />\r\n                <h5 className=\"mt-3\">Location details</h5>\r\n                <TextInput placeholder=\"City\" name=\"city\" />\r\n                <TextInput placeholder=\"Venue\" name=\"venue\" />\r\n                <br />\r\n                <div className=\"float-end\">\r\n                  <Button\r\n                    type=\"submit\"\r\n                    disabled={isSubmitting || !dirty || !isValid}\r\n                    variant=\"primary\"\r\n                    className=\"mx-3\"\r\n                  >\r\n                    {isSubmitting ? \"Submitting...\" : \"Submit\"}\r\n                  </Button>\r\n                  <Link to=\"/activities\">\r\n                    <Button type=\"button\" variant=\"secondary\">\r\n                      Cancel\r\n                    </Button>\r\n                  </Link>\r\n                </div>\r\n              </Form>\r\n            )}\r\n          </Formik>\r\n        </Card.Body>\r\n      </Card>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default observer(ActivityForm);\r\n","import { ErrorMessage, Form, Formik } from \"formik\";\r\n\r\nimport { Button } from \"react-bootstrap\";\r\nimport React from \"react\";\r\nimport TextInput from \"../../app/common/form/TextInput\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport { useStore } from \"./../../app/stores/store\";\r\n\r\nfunction LoginForm() {\r\n  const { userStore } = useStore();\r\n\r\n  return (\r\n    <Formik\r\n      initialValues={{ email: \"\", password: \"\", error: null }}\r\n      onSubmit={(values, { setErrors }) =>\r\n        userStore\r\n          .login(values)\r\n          .catch((error) => setErrors({ error: \"Invalid email or password\" }))\r\n      }\r\n    >\r\n      {({ handleSubmit, isSubmitting, errors }) => (\r\n        <Form onSubmit={handleSubmit}>\r\n          <TextInput name=\"email\" placeholder=\"Email\" />\r\n          <TextInput name=\"password\" placeholder=\"Password\" type=\"password\" />\r\n          <ErrorMessage\r\n            name=\"error\"\r\n            render={() => <p className=\"text-danger mt-2\">{errors.error}</p>}\r\n          />\r\n          <br />\r\n          <Button type=\"submit\" variant=\"success\" disabled={isSubmitting}>\r\n            Login\r\n          </Button>\r\n        </Form>\r\n      )}\r\n    </Formik>\r\n  );\r\n}\r\n\r\nexport default observer(LoginForm);\r\n","var _g, _g2, _g3, _g4, _g5, _g6, _g7, _g8, _g9, _g10, _g11, _g12, _g13, _g14, _g15, _g16;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgLogo(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    id: \"Capa_1\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    x: \"0px\",\n    y: \"0px\",\n    viewBox: \"0 0 464.164 464.164\",\n    style: {\n      enableBackground: \"new 0 0 464.164 464.164\"\n    },\n    xmlSpace: \"preserve\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    id: \"XMLID_159_\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    id: \"XMLID_170_\",\n    d: \"M253.819,255.117c27.556-60.381,20.256-44.386,30.191-66.158v-22.997l5.255,11.499l14.563-31.907 c0.321-0.72,0.781-1.324,1.158-2.007l-19.598-42.923c-2.565-5.669-8.369-8.09-14.241-8.09c-7.318,0-50.354,0-54.713,0 c-5.895,0-11.697,2.421-14.264,8.09l-4.925,10.801c-1.272,8.32-4.826,15.804-10.029,21.949c-0.099,0.123-0.199,0.252-0.298,0.375 c0.046,0.008,0.077,0.008,0.122,0.016c8.45,1.723,15.322,7.775,18.256,14.188l27.962,61.277 C233.817,209.872,252.784,251.632,253.819,255.117z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    id: \"XMLID_169_\",\n    d: \"M153.157,137.871c18.333,0,33.194-14.862,33.194-33.187c0-18.348-14.861-33.194-33.194-33.194 c-18.331,0-33.201,14.846-33.201,33.194C119.955,123.008,134.825,137.871,153.157,137.871z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    id: \"XMLID_168_\",\n    d: \"M281.213,309.125l1.602-7.584c-6.167,1.762-13.085,1.31-19.099-1.448 c-6.42-2.926-11.084-8.074-13.728-14.072v56.674c0,9.407,7.63,17.03,17.037,17.03c9.407,0,17.03-7.623,17.03-17.03v-18.096 C281.175,319.996,280.057,314.519,281.213,309.125z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    id: \"XMLID_167_\",\n    d: \"M205.741,273.027l-0.743-1.631l0.016,0.988l-0.016,70.662c0,10.611,8.588,16.678,15.528,16.678 c9.415,0,17.037-7.623,17.037-17.03v-56.139C225.466,290.648,211.118,284.818,205.741,273.027z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    id: \"XMLID_166_\",\n    d: \"M243.776,85.739c18.339,0,33.201-14.862,33.201-33.187c0-18.347-14.862-33.193-33.201-33.193 c-18.325,0-33.193,14.846-33.193,33.193C210.582,70.877,225.45,85.739,243.776,85.739z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    id: \"XMLID_165_\",\n    d: \"M361.635,133.457c19.321,0,37.722-15.949,37.722-37.721c0-20.837-16.893-37.713-37.722-37.713 c-20.836,0-37.721,16.876-37.721,37.713C323.914,117.462,342.261,133.457,361.635,133.457z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    id: \"XMLID_164_\",\n    d: \"M462.703,268.202l-53.785-117.844c-2.66-5.838-8.39-9.186-14.388-9.3h-65.79 c-5.998,0.114-11.728,3.47-14.388,9.3L260.56,268.202c-3.699,8.105-0.13,17.674,7.982,21.373 c8.044,3.685,17.658,0.169,21.365-7.982l16.786-36.771l-14.165,66.708c-1.257,5.869,3.225,11.453,9.268,11.453h14.058v102.462 c0,10.694,8.673,19.359,19.358,19.359c10.695,0,19.367-8.665,19.367-19.359V322.983h14.111v102.462 c0,10.694,8.665,19.359,19.359,19.359c10.688,0,19.358-8.665,19.358-19.359V322.983h14.058c6.051,0,10.525-5.584,9.276-11.453 l-14.172-66.708l16.784,36.771c3.716,8.152,13.33,11.668,21.374,7.982C462.833,285.875,466.403,276.307,462.703,268.202z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    id: \"XMLID_163_\",\n    d: \"M53.691,251.646l18.002-39.452l29.326-64.25c3.225-7.103,9.599-12.12,17.045-14.012v-1.808 c-5.378-6.841-8.74-15.674-9.37-24.882H56.885c-5.47-0.06-10.563,2.199-12.893,7.316L1.16,208.394 c-2.941,6.458-0.099,14.073,6.352,17.015c6.518,2.979,14.097,0.053,17.022-6.351l20.707-45.367c0,3.691-0.045,59.837-0.045,159.918 c0,8.51,6.901,15.413,15.413,15.413c8.519,0,15.413-6.903,15.413-15.413v-45.658c-3.271-0.085-6.535-0.773-9.614-2.184 C53.591,279.923,47.723,264.685,53.691,251.646z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    id: \"XMLID_162_\",\n    d: \"M87.268,285.692v47.918c0,8.021,6.205,14.401,14.041,15.129v-77.327l-0.75,1.624 C97.902,278.889,92.991,283.232,87.268,285.692z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    id: \"XMLID_161_\",\n    d: \"M81.653,101.091c16.585,0,30.038-13.445,30.038-30.03c0-16.593-13.453-30.03-30.038-30.03 c-16.601,0-30.045,13.437-30.045,30.03C51.608,87.646,65.052,101.091,81.653,101.091z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    id: \"XMLID_160_\",\n    d: \"M194.763,152.755c-2.575-5.661-8.37-8.089-14.241-8.089c-4.846,0-47.951,0-54.729,0 c-5.889,0-11.676,2.413-14.248,8.089L64.209,256.45c-3.248,7.125-0.107,15.551,7.024,18.799c7.079,3.25,15.537,0.162,18.801-7.016 l22.891-50.139l-0.047,176.731c0,9.407,7.623,17.03,17.03,17.03c9.415,0,17.037-7.623,17.037-17.03V293.298h12.425v101.527 c0,9.407,7.63,17.03,17.039,17.03c9.407,0,17.028-7.623,17.028-17.03l-0.045-176.709l22.883,50.117 c3.271,7.178,11.72,10.266,18.798,7.016c7.141-3.248,10.281-11.674,7.026-18.799L194.763,152.755z\"\n  }))), _g2 || (_g2 = /*#__PURE__*/React.createElement(\"g\", null)), _g3 || (_g3 = /*#__PURE__*/React.createElement(\"g\", null)), _g4 || (_g4 = /*#__PURE__*/React.createElement(\"g\", null)), _g5 || (_g5 = /*#__PURE__*/React.createElement(\"g\", null)), _g6 || (_g6 = /*#__PURE__*/React.createElement(\"g\", null)), _g7 || (_g7 = /*#__PURE__*/React.createElement(\"g\", null)), _g8 || (_g8 = /*#__PURE__*/React.createElement(\"g\", null)), _g9 || (_g9 = /*#__PURE__*/React.createElement(\"g\", null)), _g10 || (_g10 = /*#__PURE__*/React.createElement(\"g\", null)), _g11 || (_g11 = /*#__PURE__*/React.createElement(\"g\", null)), _g12 || (_g12 = /*#__PURE__*/React.createElement(\"g\", null)), _g13 || (_g13 = /*#__PURE__*/React.createElement(\"g\", null)), _g14 || (_g14 = /*#__PURE__*/React.createElement(\"g\", null)), _g15 || (_g15 = /*#__PURE__*/React.createElement(\"g\", null)), _g16 || (_g16 = /*#__PURE__*/React.createElement(\"g\", null)));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgLogo);\nexport default __webpack_public_path__ + \"static/media/logo.123e02b0.svg\";\nexport { ForwardRef as ReactComponent };","import { Card, Container } from \"react-bootstrap\";\r\n\r\nimport React from \"react\";\r\n\r\ninterface Props {\r\n  errors: any;\r\n}\r\n\r\nexport default function ValidationErrors({ errors }: Props) {\r\n  return (\r\n    <Container>\r\n      <Card className=\"mt-3 p-3\">\r\n        {errors && (\r\n          <ul className=\"text-danger\">\r\n            {errors.map((err: any, index: any) => (\r\n              <li key={index}>{err}</li>\r\n            ))}\r\n          </ul>\r\n        )}\r\n      </Card>\r\n    </Container>\r\n  );\r\n}\r\n","import * as Yup from \"yup\";\r\n\r\nimport { ErrorMessage, Form, Formik } from \"formik\";\r\n\r\nimport { Button } from \"react-bootstrap\";\r\nimport React from \"react\";\r\nimport TextInput from \"../../app/common/form/TextInput\";\r\nimport ValidationErrors from \"../errors/ValidationErrors\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport { useStore } from \"../../app/stores/store\";\r\n\r\nfunction RegisterForm() {\r\n  const { userStore } = useStore();\r\n\r\n  return (\r\n    <Formik\r\n      initialValues={{\r\n        email: \"\",\r\n        password: \"\",\r\n        username: \"\",\r\n        displayName: \"\",\r\n        error: null,\r\n      }}\r\n      onSubmit={(values, { setErrors }) =>\r\n        userStore.register(values).catch((error) => setErrors({ error: error }))\r\n      }\r\n      validationSchema={Yup.object({\r\n        displayName: Yup.string().required(),\r\n        username: Yup.string().required(),\r\n        email: Yup.string().email().required(),\r\n        password: Yup.string().required(),\r\n      })}\r\n    >\r\n      {({ handleSubmit, isSubmitting, errors, isValid, dirty }) => (\r\n        <Form onSubmit={handleSubmit}>\r\n          <TextInput name=\"displayName\" placeholder=\"Display name\" />\r\n          <TextInput name=\"username\" placeholder=\"Username\" />\r\n          <TextInput name=\"email\" placeholder=\"Email\" />\r\n          <TextInput name=\"password\" placeholder=\"Password\" type=\"password\" />\r\n          <ErrorMessage\r\n            name=\"error\"\r\n            render={() => <ValidationErrors errors={errors.error} />}\r\n          />\r\n          <br />\r\n          <Button\r\n            type=\"submit\"\r\n            variant=\"success\"\r\n            disabled={isSubmitting || !isValid || !dirty}\r\n          >\r\n            Register\r\n          </Button>\r\n        </Form>\r\n      )}\r\n    </Formik>\r\n  );\r\n}\r\n\r\nexport default observer(RegisterForm);\r\n","import { Button, Container } from \"react-bootstrap\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\nimport LoginForm from \"../users/LoginForm\";\r\nimport React from \"react\";\r\nimport { ReactComponent as ReactLogo } from \"../../logo.svg\";\r\nimport RegisterForm from \"../users/RegisterForm\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport { useStore } from \"./../../app/stores/store\";\r\n\r\nexport default observer(function HomePage() {\r\n  const { userStore, modalStore } = useStore();\r\n  return (\r\n    <div className=\"body gradient-background text-light\">\r\n      <Container className=\"vh-100 d-flex align-items-center justify-content-center flex-column\">\r\n        <h1>\r\n          <ReactLogo style={{ fill: \"currentcolor\" }} height=\"80\" /> Activities\r\n        </h1>\r\n        {userStore.isLoggedIn ? (\r\n          <>\r\n            <h2>Welcome to Activities</h2>\r\n            <Link to=\"/activities\">\r\n              <Button variant=\"outline-light\">Go to Activities!</Button>\r\n            </Link>\r\n          </>\r\n        ) : (\r\n          <div>\r\n            <Button\r\n              variant=\"outline-light\"\r\n              onClick={() =>\r\n                modalStore.openModal(<LoginForm />, \"Login to Activities\")\r\n              }\r\n              className=\"me-3\"\r\n            >\r\n              Login\r\n            </Button>\r\n            <Button\r\n              variant=\"outline-light\"\r\n              onClick={() =>\r\n                modalStore.openModal(<RegisterForm />, \"Register new user\")\r\n              }\r\n            >\r\n              Register\r\n            </Button>\r\n          </div>\r\n        )}\r\n      </Container>\r\n    </div>\r\n  );\r\n});\r\n","import { Modal } from \"react-bootstrap\";\r\nimport React from \"react\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport { useStore } from \"../../stores/store\";\r\n\r\nexport default observer(function ModalContainer() {\r\n  const { modalStore } = useStore();\r\n\r\n  return (\r\n    <Modal show={modalStore.modal.open} onHide={modalStore.closeModal}>\r\n      <Modal.Header closeButton>\r\n        <Modal.Title>{modalStore.modal.header}</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>{modalStore.modal.body}</Modal.Body>\r\n    </Modal>\r\n  );\r\n});\r\n","import {\r\n  Button,\r\n  Container,\r\n  Image,\r\n  Nav,\r\n  NavDropdown,\r\n  Navbar,\r\n} from \"react-bootstrap\";\r\nimport { DoorClosedFill, PersonFill } from \"react-bootstrap-icons\";\r\nimport { Link, NavLink } from \"react-router-dom\";\r\n\r\nimport { ReactComponent as ReactLogo } from \"../../logo.svg\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport { useStore } from \"../stores/store\";\r\n\r\nexport default observer(function NavBar() {\r\n  const {\r\n    userStore: { user, logout },\r\n  } = useStore();\r\n  return (\r\n    <Navbar variant=\"dark\" className=\"gradient-background p-3\">\r\n      <Container>\r\n        <Nav className=\"w-100\">\r\n          <Navbar.Brand as={NavLink} to=\"/\" exact>\r\n            <ReactLogo style={{ fill: \"currentcolor\" }} height=\"30\" />{\" \"}\r\n            Activities\r\n          </Navbar.Brand>\r\n\r\n          <Nav.Link as={NavLink} to=\"/activities\">\r\n            Activities\r\n          </Nav.Link>\r\n          {/* <Nav.Link as={NavLink} to=\"/errors\">\r\n            Errors\r\n          </Nav.Link> */}\r\n          <NavLink to=\"/createActivity\" className=\"me-auto\">\r\n            <Button variant=\"success\">Create activity</Button>\r\n          </NavLink>\r\n          <div className=\"d-flex ms-auto\">\r\n            <Image\r\n              roundedCircle\r\n              src={user?.image || \"/assets/user.png\"}\r\n              height=\"40\"\r\n            />\r\n            <NavDropdown title={user?.displayName} id=\"basic-nav-dropdown\">\r\n              <NavDropdown.Item as={Link} to={`/profiles/${user?.username}`}>\r\n                <PersonFill />\r\n                Profile\r\n              </NavDropdown.Item>\r\n              <NavDropdown.Item onClick={logout}>\r\n                <DoorClosedFill /> Logout\r\n              </NavDropdown.Item>\r\n            </NavDropdown>\r\n          </div>\r\n        </Nav>\r\n      </Container>\r\n    </Navbar>\r\n  );\r\n});\r\n","import { Button, Card, Container } from \"react-bootstrap\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\nimport React from \"react\";\r\nimport { Search } from \"react-bootstrap-icons\";\r\n\r\nexport default function NotFound() {\r\n  return (\r\n    <Container className=\"mt-4 text-center\">\r\n      <Card className=\"py-4\">\r\n        <Card.Body>\r\n          <div className=\"h4\">\r\n            <Search height=\"30\" className=\"me-2\" />\r\n            Oops, we couldn't found this\r\n          </div>\r\n          <Link to=\"/activities\">\r\n            <Button>Return to activities page</Button>\r\n          </Link>\r\n        </Card.Body>\r\n      </Card>\r\n    </Container>\r\n  );\r\n}\r\n","import {\r\n  Redirect,\r\n  Route,\r\n  RouteComponentProps,\r\n  RouteProps,\r\n} from \"react-router-dom\";\r\nimport { useStore } from \"../stores/store\";\r\n\r\ninterface Props extends RouteProps {\r\n  component:\r\n    | React.ComponentType<RouteComponentProps<any>>\r\n    | React.ComponentType<any>;\r\n}\r\n\r\nexport default function PrivateRoute({ component: Component, ...rest }: Props) {\r\n  const {\r\n    userStore: { isLoggedIn },\r\n  } = useStore();\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) =>\r\n        isLoggedIn ? <Component {...props} /> : <Redirect to=\"/\" />\r\n      }\r\n    />\r\n  );\r\n}\r\n","import * as Yup from \"yup\";\r\n\r\nimport { Form, Formik } from \"formik\";\r\n\r\nimport { Button } from \"react-bootstrap\";\r\nimport { Profile } from \"../../app/models/profile\";\r\nimport React from \"react\";\r\nimport TextArea from \"../../app/common/form/TextArea\";\r\nimport TextInput from \"../../app/common/form/TextInput\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport { useStore } from \"../../app/stores/store\";\r\n\r\ninterface Props {\r\n  profile: Profile;\r\n  onFinish: () => void;\r\n}\r\n\r\nexport default observer(function ProfileForm({ profile, onFinish }: Props) {\r\n  const { profileStore } = useStore();\r\n\r\n  const initialProfile = {\r\n    displayName: profile.displayName,\r\n    bio: profile.bio,\r\n  };\r\n\r\n  function handleFormSubmit(values: Partial<Profile>) {\r\n    profileStore.updateProfile(values as Profile).then(() => onFinish());\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Formik\r\n        initialValues={initialProfile}\r\n        enableReinitialize\r\n        onSubmit={handleFormSubmit}\r\n        validationSchema={Yup.object({\r\n          displayName: Yup.string().required(\"Display name is required field\"),\r\n        })}\r\n      >\r\n        {({ handleSubmit, dirty, isSubmitting, isValid }) => (\r\n          <Form onSubmit={handleSubmit} autoComplete=\"off\">\r\n            <TextInput placeholder=\"Display name\" name=\"displayName\" />\r\n            <TextArea placeholder=\"Bio\" name=\"bio\" />\r\n\r\n            <br />\r\n            <div className=\"float-end\">\r\n              <Button\r\n                type=\"submit\"\r\n                disabled={isSubmitting || !dirty || !isValid}\r\n                variant=\"primary\"\r\n                className=\"mx-3\"\r\n              >\r\n                {isSubmitting ? \"Updating...\" : \"Update profile\"}\r\n              </Button>\r\n            </div>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </>\r\n  );\r\n});\r\n","import React, { useState } from \"react\";\r\n\r\nimport { Button } from \"react-bootstrap\";\r\nimport { PersonFill } from \"react-bootstrap-icons\";\r\nimport { Profile } from \"../../app/models/profile\";\r\nimport ProfileForm from \"./ProfileForm\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport { useStore } from \"../../app/stores/store\";\r\n\r\ninterface Props {\r\n  profile: Profile;\r\n}\r\n\r\nexport default observer(function ProfileAbout({ profile }: Props) {\r\n  const { profileStore } = useStore();\r\n  const [editMode, setEditMode] = useState(false);\r\n\r\n  return (\r\n    <>\r\n      <h4 className=\"mb-4\">\r\n        <PersonFill /> About {profile.displayName}\r\n        {profileStore.isCurrentUser && (\r\n          <Button\r\n            variant=\"outline-secondary\"\r\n            className=\"float-end\"\r\n            onClick={() => setEditMode(!editMode)}\r\n          >\r\n            {editMode ? \"Cancel\" : \"Edit Profile\"}\r\n          </Button>\r\n        )}\r\n      </h4>\r\n      {editMode ? (\r\n        <ProfileForm profile={profile} onFinish={() => setEditMode(false)} />\r\n      ) : (\r\n        <div style={{ whiteSpace: \"pre-wrap\" }}>{profile.bio}</div>\r\n      )}\r\n    </>\r\n  );\r\n});\r\n","import { Card, Col, Row } from \"react-bootstrap\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\nimport LoadingComponent from \"./../../app/layout/LoadingComponent\";\r\nimport React from \"react\";\r\nimport { format } from \"date-fns\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport { useStore } from \"../../app/stores/store\";\r\n\r\nexport default observer(function ProfileActivitiesList() {\r\n  const { profileStore } = useStore();\r\n  const { activities, isLoadingActivities } = profileStore;\r\n\r\n  return (\r\n    <Row xs={3}>\r\n      {isLoadingActivities ? (\r\n        <LoadingComponent className=\"w-100 h-100\" />\r\n      ) : (\r\n        activities.map((activity) => (\r\n          <Col key={activity.id}>\r\n            <Link to={`/activities/${activity.id}`} className=\"text-body\">\r\n              <Card>\r\n                <Card.Img\r\n                  variant=\"top\"\r\n                  src={`/assets/categoryImages/${activity.category}.jpg`}\r\n                />\r\n                <Card.Body className=\"text-center\">\r\n                  <Card.Title>{activity.title}</Card.Title>\r\n                  <Card.Text>\r\n                    {format(new Date(activity.date), \"do MMM\")}\r\n                    <br />\r\n                    {format(new Date(activity.date), \"h:mm\")}\r\n                  </Card.Text>\r\n                </Card.Body>\r\n              </Card>\r\n            </Link>\r\n          </Col>\r\n        ))\r\n      )}\r\n    </Row>\r\n  );\r\n});\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Tab, Tabs } from \"react-bootstrap\";\r\n\r\nimport { CalendarFill } from \"react-bootstrap-icons\";\r\nimport ProfileActivitiesList from \"./ProfileActivitiesList\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport { useStore } from \"./../../app/stores/store\";\r\n\r\nexport default observer(function ProfileActivities() {\r\n  const { profileStore } = useStore();\r\n\r\n  const [key, setKey] = useState(\"future\");\r\n\r\n  useEffect(() => {\r\n    profileStore.loadActivities(key);\r\n  }, [key, profileStore]);\r\n\r\n  return (\r\n    <>\r\n      <h4>\r\n        <CalendarFill /> Activities\r\n      </h4>\r\n      <Tabs activeKey={key} onSelect={(k) => setKey(k!)} className=\"mb-3\">\r\n        <Tab eventKey=\"future\" title=\"Future Events\">\r\n          <ProfileActivitiesList />\r\n        </Tab>\r\n        <Tab eventKey=\"past\" title=\"Past Events\">\r\n          <ProfileActivitiesList />\r\n        </Tab>\r\n        <Tab eventKey=\"hosting\" title=\"Hosting\">\r\n          <ProfileActivitiesList />\r\n        </Tab>\r\n      </Tabs>\r\n    </>\r\n  );\r\n});\r\n","import { Col, Row } from \"react-bootstrap\";\r\n\r\nimport LoadingComponent from \"../../app/layout/LoadingComponent\";\r\nimport { PeopleFill } from \"react-bootstrap-icons\";\r\nimport ProfileCard from \"./ProfileCard\";\r\nimport React from \"react\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport { useStore } from \"./../../app/stores/store\";\r\n\r\nexport default observer(function ProfileFollowings() {\r\n  const { profileStore } = useStore();\r\n  const { profile, followings, isLoading, activeTab } = profileStore;\r\n\r\n  return (\r\n    <>\r\n      <h4>\r\n        <PeopleFill /> People{\" \"}\r\n        {activeTab === \"followers\"\r\n          ? `following ${profile?.displayName}`\r\n          : `${profile?.displayName} is following`}\r\n      </h4>\r\n      <Row xs={3}>\r\n        {isLoading ? (\r\n          <LoadingComponent className=\"w-100 h-100\" />\r\n        ) : (\r\n          followings.map((profile) => (\r\n            <Col key={profile.username}>\r\n              <ProfileCard profile={profile} />\r\n            </Col>\r\n          ))\r\n        )}\r\n      </Row>\r\n    </>\r\n  );\r\n});\r\n","import \"cropperjs/dist/cropper.css\";\r\n\r\nimport { Cropper } from \"react-cropper\";\r\nimport React from \"react\";\r\n\r\ninterface Props {\r\n  imagePreview: string;\r\n  setCropper: (cropper: Cropper) => void;\r\n}\r\n\r\nexport default function PhotoWidgetCropper({\r\n  imagePreview,\r\n  setCropper,\r\n}: Props) {\r\n  return (\r\n    <div>\r\n      <Cropper\r\n        src={imagePreview}\r\n        onInitialized={(cropper) => setCropper(cropper)}\r\n        initialAspectRatio={1}\r\n        aspectRatio={1}\r\n        style={{ width: 250, height: \"100%\" }}\r\n        preview=\".img-preview\"\r\n        guides={false}\r\n        viewMode={1}\r\n        autoCropArea={1}\r\n        background={false}\r\n      ></Cropper>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useCallback } from \"react\";\r\n\r\nimport { CloudUploadFill } from \"react-bootstrap-icons\";\r\nimport { useDropzone } from \"react-dropzone\";\r\n\r\ninterface Props {\r\n  //todo change from any\r\n  setFiles: (files: any) => void;\r\n}\r\n\r\nexport default function PhotoWidgetDropzone({ setFiles }: Props) {\r\n  const dzStyles = {\r\n    border: \"dashed 3px #eee\",\r\n    borderColor: \"#eee\",\r\n    borderRadius: \"5px\",\r\n    paddingTop: \"30px\",\r\n    textAlign: \"center\" as \"center\",\r\n    height: 200,\r\n  };\r\n\r\n  const dzActive = {\r\n    borderColor: \"green\",\r\n  };\r\n\r\n  const onDrop = useCallback(\r\n    (acceptedFiles) => {\r\n      setFiles(\r\n        acceptedFiles.map((file: any) =>\r\n          Object.assign(file, { preview: URL.createObjectURL(file) })\r\n        )\r\n      );\r\n    },\r\n    [setFiles]\r\n  );\r\n\r\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({ onDrop });\r\n\r\n  return (\r\n    <div\r\n      {...getRootProps()}\r\n      style={isDragActive ? { ...dzStyles, ...dzActive } : dzStyles}\r\n    >\r\n      <input {...getInputProps()} />\r\n      <CloudUploadFill size=\"80\" />\r\n      <p className=\"fw-bold\">Drop image here</p>\r\n    </div>\r\n  );\r\n}\r\n","import { Button, ButtonGroup, Col, Row } from \"react-bootstrap\";\r\nimport { CheckLg, XLg } from \"react-bootstrap-icons\";\r\nimport React, { useEffect, useState } from \"react\";\r\n\r\nimport PhotoWidgetCropper from \"./PhotoWidgetCropper\";\r\nimport PhotoWidgetDropzone from \"./PhotoWidgetDropzone\";\r\n\r\ninterface Props {\r\n  uploadPhoto: (file: Blob) => void;\r\n  loading: boolean;\r\n}\r\n\r\nexport default function PhotoUploadWidget({ loading, uploadPhoto }: Props) {\r\n  const [files, setFiles] = useState<any>([]);\r\n  const [cropper, setCropper] = useState<Cropper>();\r\n\r\n  function onCrop() {\r\n    if (cropper) {\r\n      cropper.getCroppedCanvas().toBlob((blob) => uploadPhoto(blob!));\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      files.forEach((file: any) => {\r\n        URL.revokeObjectURL(file.preview);\r\n      });\r\n    };\r\n  }, [files]);\r\n\r\n  return (\r\n    <Row xs={3}>\r\n      <Col>\r\n        <h5>Step 1 - Add photo</h5>\r\n        <PhotoWidgetDropzone setFiles={setFiles} />\r\n      </Col>\r\n      <Col>\r\n        <h5>Step 2 - Resize image</h5>\r\n        {files && files.length > 0 && (\r\n          <PhotoWidgetCropper\r\n            setCropper={setCropper}\r\n            imagePreview={files[0].preview}\r\n          />\r\n        )}\r\n      </Col>\r\n      <Col>\r\n        <h5>Step 3 - Preview & upload</h5>\r\n        {files && files.length > 0 && (\r\n          <>\r\n            <div\r\n              className=\"img-preview\"\r\n              style={{ minHeight: 250, overflow: \"hidden\" }}\r\n            />\r\n            <ButtonGroup className=\"w-100\">\r\n              <Button variant=\"outline-success\" onClick={onCrop}>\r\n                {loading ? \"Loading...\" : <CheckLg />}\r\n              </Button>\r\n              <Button\r\n                variant=\"outline-primary\"\r\n                onClick={() => setFiles([])}\r\n                disabled={loading}\r\n              >\r\n                <XLg />\r\n              </Button>\r\n            </ButtonGroup>\r\n          </>\r\n        )}\r\n      </Col>\r\n    </Row>\r\n  );\r\n}\r\n","import { Button, ButtonGroup, Card, Col, Row } from \"react-bootstrap\";\r\nimport { ImageFill, TrashFill } from \"react-bootstrap-icons\";\r\nimport React, { SyntheticEvent, useState } from \"react\";\r\n\r\nimport { Photo } from \"./../../app/models/profile\";\r\nimport PhotoUploadWidget from \"../../app/common/imageUpload/PhotoUploadWidget\";\r\nimport { Profile } from \"../../app/models/profile\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport { useStore } from \"../../app/stores/store\";\r\n\r\ninterface Props {\r\n  profile: Profile;\r\n}\r\n\r\nexport default observer(function ProfilePhotos({ profile }: Props) {\r\n  const { profileStore } = useStore();\r\n\r\n  const [addPhotoMode, setAddPhotoMode] = useState(false);\r\n  const [target, setTarget] = useState(\"\");\r\n\r\n  function handlePhotoUpload(file: Blob) {\r\n    profileStore.uploadPhoto(file).then(() => setAddPhotoMode(false));\r\n  }\r\n\r\n  function handleSetMainPhoto(\r\n    photo: Photo,\r\n    e: SyntheticEvent<HTMLButtonElement>\r\n  ) {\r\n    setTarget(e.currentTarget.name);\r\n    profileStore.setMainPhoto(photo);\r\n  }\r\n\r\n  function handleDeletePhoto(\r\n    photo: Photo,\r\n    e: SyntheticEvent<HTMLButtonElement>\r\n  ) {\r\n    setTarget(e.currentTarget.name);\r\n    profileStore.deletePhoto(photo);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <h4 className=\"mb-4\">\r\n        <ImageFill /> Photos\r\n        {profileStore.isCurrentUser && (\r\n          <Button\r\n            variant=\"outline-secondary\"\r\n            className=\"float-end\"\r\n            onClick={() => setAddPhotoMode(!addPhotoMode)}\r\n          >\r\n            {addPhotoMode ? \"Cancel\" : \"Add Photo\"}\r\n          </Button>\r\n        )}\r\n      </h4>\r\n      {profileStore.isCurrentUser && addPhotoMode ? (\r\n        <PhotoUploadWidget\r\n          loading={profileStore.isUploading}\r\n          uploadPhoto={handlePhotoUpload}\r\n        />\r\n      ) : (\r\n        <Row xs={4}>\r\n          {profile.photos?.map((photo) => (\r\n            <Col key={photo.id}>\r\n              <Card className=\"m-2\">\r\n                <Card.Img variant=\"top\" src={photo.url} />\r\n                {profileStore.isCurrentUser && (\r\n                  <ButtonGroup className=\"w-100\">\r\n                    <Button\r\n                      variant=\"outline-success\"\r\n                      name={\"main\" + photo.id}\r\n                      disabled={photo.isMain}\r\n                      onClick={(e) => handleSetMainPhoto(photo, e)}\r\n                    >\r\n                      {profileStore.isLoading && target === \"main\" + photo.id\r\n                        ? \"Loading...\"\r\n                        : \"Main\"}\r\n                    </Button>\r\n                    <Button\r\n                      variant=\"outline-danger\"\r\n                      onClick={(e) => handleDeletePhoto(photo, e)}\r\n                      name={photo.id}\r\n                      disabled={\r\n                        photo.isMain ||\r\n                        (profileStore.isLoading && target === photo.id)\r\n                      }\r\n                    >\r\n                      {profileStore.isLoading && target === photo.id ? (\r\n                        \"Deleting...\"\r\n                      ) : (\r\n                        <TrashFill />\r\n                      )}\r\n                    </Button>\r\n                  </ButtonGroup>\r\n                )}\r\n              </Card>\r\n            </Col>\r\n          ))}\r\n        </Row>\r\n      )}\r\n    </>\r\n  );\r\n});\r\n","import { Card, Col, Nav, Row, Tab } from \"react-bootstrap\";\r\n\r\nimport { Profile } from \"../../app/models/profile\";\r\nimport ProfileAbout from \"./ProfileAbout\";\r\nimport ProfileActivities from \"./ProfileActivities\";\r\nimport ProfileFollowings from \"./ProfileFollowings\";\r\nimport ProfilePhotos from \"./ProfilePhotos\";\r\nimport React from \"react\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport { useStore } from \"./../../app/stores/store\";\r\n\r\ninterface Props {\r\n  profile: Profile;\r\n}\r\n\r\nexport default observer(function ProfileContent({ profile }: Props) {\r\n  const { profileStore } = useStore();\r\n\r\n  return (\r\n    <Card className=\"mt-3 p-3\">\r\n      <Tab.Container\r\n        defaultActiveKey=\"about\"\r\n        onSelect={(eventKey) => profileStore.setActiveTab(eventKey)}\r\n      >\r\n        <Row>\r\n          <Col sm={9}>\r\n            <Tab.Content>\r\n              <Tab.Pane eventKey=\"about\">\r\n                <ProfileAbout profile={profile} />\r\n              </Tab.Pane>\r\n              <Tab.Pane eventKey=\"photos\">\r\n                <ProfilePhotos profile={profile} />\r\n              </Tab.Pane>\r\n              <Tab.Pane eventKey=\"events\">\r\n                <ProfileActivities />\r\n              </Tab.Pane>\r\n              <Tab.Pane eventKey=\"followers\">\r\n                <ProfileFollowings />\r\n              </Tab.Pane>\r\n              <Tab.Pane eventKey=\"following\">\r\n                <ProfileFollowings />\r\n              </Tab.Pane>\r\n            </Tab.Content>\r\n          </Col>\r\n          <Col sm={3}>\r\n            <Nav variant=\"pills\" className=\"flex-column\">\r\n              <Nav.Item>\r\n                <Nav.Link eventKey=\"about\">About</Nav.Link>\r\n              </Nav.Item>\r\n              <Nav.Item>\r\n                <Nav.Link eventKey=\"photos\">Photos</Nav.Link>\r\n              </Nav.Item>\r\n              <Nav.Item>\r\n                <Nav.Link eventKey=\"events\">Events</Nav.Link>\r\n              </Nav.Item>\r\n              <Nav.Item>\r\n                <Nav.Link eventKey=\"followers\">Followers</Nav.Link>\r\n              </Nav.Item>\r\n              <Nav.Item>\r\n                <Nav.Link eventKey=\"following\">Following</Nav.Link>\r\n              </Nav.Item>\r\n            </Nav>\r\n          </Col>\r\n        </Row>\r\n      </Tab.Container>\r\n    </Card>\r\n  );\r\n});\r\n","import { Card, Col, Image, Row } from \"react-bootstrap\";\r\n\r\nimport FollowButton from \"./FollowButton\";\r\nimport { Profile } from \"./../../app/models/profile\";\r\nimport React from \"react\";\r\nimport { observer } from \"mobx-react-lite\";\r\n\r\ninterface Props {\r\n  profile: Profile;\r\n}\r\n\r\nexport default observer(function ProfileHeader({ profile }: Props) {\r\n  return (\r\n    <Card className=\"mt-3 p-3\">\r\n      <Row>\r\n        <Col xs={9}>\r\n          <Image\r\n            src={profile.image || \"/assets/user.png\"}\r\n            height=\"150\"\r\n            roundedCircle\r\n            className=\"me-3\"\r\n          />\r\n          <span className=\"h4\">{profile.displayName}</span>\r\n        </Col>\r\n        <Col xs={3}>\r\n          <div className=\"d-flex justify-content-between\">\r\n            <div>\r\n              <div className=\"h1 text-center\">{profile.followersCount}</div>{\" \"}\r\n              followers\r\n            </div>\r\n            <div>\r\n              <div className=\"h1 text-center\">{profile.followingCount}</div>{\" \"}\r\n              following\r\n            </div>\r\n          </div>\r\n          <div className=\"pt-3 text-center\">\r\n            {profile.isFollowing && (\r\n              <span className=\"text-success fw-bold\">Following</span>\r\n            )}\r\n          </div>\r\n          <FollowButton profile={profile} />\r\n        </Col>\r\n      </Row>\r\n    </Card>\r\n  );\r\n});\r\n","import React, { useEffect } from \"react\";\r\n\r\nimport { Container } from \"react-bootstrap\";\r\nimport LoadingComponent from \"../../app/layout/LoadingComponent\";\r\nimport ProfileContent from \"./ProfileContent\";\r\nimport ProfileHeader from \"./ProfileHeader\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport { useParams } from \"react-router\";\r\nimport { useStore } from \"./../../app/stores/store\";\r\n\r\nexport default observer(function ProfilePage() {\r\n  const { username } = useParams<{ username: string }>();\r\n  const { profileStore } = useStore();\r\n\r\n  useEffect(() => {\r\n    profileStore.loadProfile(username);\r\n    return () => profileStore.setActiveTab(null);\r\n  }, [profileStore, username]);\r\n\r\n  if (profileStore.isLoadingProfile)\r\n    return <LoadingComponent content=\"Loading profile...\" />;\r\n\r\n  return (\r\n    <Container>\r\n      {profileStore.profile && (\r\n        <>\r\n          <ProfileHeader profile={profileStore.profile} />\r\n          <ProfileContent profile={profileStore.profile} />\r\n        </>\r\n      )}\r\n    </Container>\r\n  );\r\n});\r\n","import { Card, Container } from \"react-bootstrap\";\r\n\r\nimport React from \"react\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport { useStore } from \"../../app/stores/store\";\r\n\r\nfunction ServerError() {\r\n  const { commonStore } = useStore();\r\n\r\n  return (\r\n    <Container>\r\n      <h2>Server Error</h2>\r\n      <p className=\"h5 text-danger\">{commonStore.error?.message}</p>\r\n      {commonStore.error?.details && (\r\n        <Card>\r\n          <Card.Header>Stack trace</Card.Header>\r\n          <Card.Body>\r\n            <code>{commonStore.error.details}</code>\r\n          </Card.Body>\r\n        </Card>\r\n      )}\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default observer(ServerError);\r\n","import React, { useEffect } from \"react\";\nimport { Route, Switch, useLocation } from \"react-router\";\n\nimport ActivityDashboard from \"../../features/activities/dashboard/ActivityDashboard\";\nimport ActivityDetails from \"./../../features/activities/details/ActivityDetails\";\nimport ActivityForm from \"../../features/activities/form/ActivityForm\";\nimport HomePage from \"./../../features/home/HomePage\";\nimport LoadingComponent from \"./LoadingComponent\";\nimport ModalContainer from \"../common/modals/ModalContainer\";\nimport NavBar from \"./NavBar\";\nimport NotFound from \"./../../features/errors/NotFound\";\nimport PrivateRoute from \"./PrivateRoute\";\nimport ProfilePage from \"../../features/profiles/ProfilePage\";\nimport ServerError from \"../../features/errors/ServerError\";\nimport TestErrors from \"./../../features/errors/TestError\";\nimport { ToastContainer } from \"react-toastify\";\nimport { observer } from \"mobx-react-lite\";\nimport { useStore } from \"./../stores/store\";\n\nfunction App() {\n  const location = useLocation();\n  const { userStore, commonStore } = useStore();\n\n  useEffect(() => {\n    if (commonStore.token) {\n      userStore.getUser().finally(() => commonStore.setAppLoaded());\n    } else {\n      commonStore.setAppLoaded();\n    }\n  }, [commonStore, userStore]);\n\n  if (!commonStore.appLoaded)\n    return <LoadingComponent content=\"Loading app...\" />;\n\n  return (\n    <div className=\"body\">\n      <ToastContainer position=\"bottom-right\" hideProgressBar />\n      <ModalContainer />\n      <Route path=\"/\" exact component={HomePage} />\n      <Route\n        path={\"/(.+)\"}\n        render={() => (\n          <>\n            <header>\n              <NavBar />\n            </header>\n            <Switch>\n              <PrivateRoute\n                path=\"/activities\"\n                exact\n                component={ActivityDashboard}\n              />\n              <PrivateRoute\n                path=\"/activities/:id\"\n                component={ActivityDetails}\n              />\n              <PrivateRoute\n                key={location.key}\n                path={[\"/createActivity\", \"/manage/:id\"]}\n                component={ActivityForm}\n              />\n              <PrivateRoute\n                path=\"/profiles/:username\"\n                component={ProfilePage}\n              />\n              {/* <PrivateRoute path=\"/errors\" component={TestErrors} /> */}\n              <Route path=\"/server-error\" component={ServerError} />\n              <Route component={NotFound} />\n            </Switch>\n          </>\n        )}\n      />\n    </div>\n  );\n}\n\nexport default observer(App);\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"react-calendar/dist/Calendar.css\";\nimport \"react-toastify/dist/ReactToastify.min.css\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport \"./app/layout/styles.css\";\n\nimport { StoreContext, store } from \"./app/stores/store\";\n\nimport App from \"./app/layout/App\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Router } from \"react-router-dom\";\nimport { createBrowserHistory } from \"history\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nexport const history = createBrowserHistory();\n\nReactDOM.render(\n  <React.StrictMode>\n    <StoreContext.Provider value={store}>\n      <Router history={history}>\n        <App />\n      </Router>\n    </StoreContext.Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}